{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth } from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    name: '',\n    email: '',\n    department: 'CSE',\n    date: '',\n    timeSlot: ''\n  });\n\n  // Delete booking form state\n  const [deleteEmail, setDeleteEmail] = useState('');\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n\n  // Check API health on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    checkServerHealth();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    document.getElementById(\"date\").setAttribute(\"min\", today);\n  }, []);\n\n  // Handle booking form input changes\n  const handleBookingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update the booking form state\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear previous errors and success messages\n    setError('');\n    setSuccess('');\n\n    // Fetch available seats when date changes\n    if (name === 'date' && value) {\n      handleFetchAvailableSeats(value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date);\n    }\n  };\n\n  // Fetch available seats for selected date\n  const handleFetchAvailableSeats = async selectedDate => {\n    if (!selectedDate) {\n      alert(\"Please select a date to check available slots.\");\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate);\n\n      // Transform data for the time slot dropdown\n      const availableTimeSlots = [{\n        value: \"9-11\",\n        label: \"9:00 AM - 11:00 AM\",\n        available: data[\"9-11\"] || 0\n      }, {\n        value: \"11-1\",\n        label: \"11:00 AM - 1:00 PM\",\n        available: data[\"11-1\"] || 0\n      }, {\n        value: \"2-4\",\n        label: \"2:00 PM - 4:00 PM\",\n        available: data[\"2-4\"] || 0\n      }, {\n        value: \"4-6\",\n        label: \"4:00 PM - 6:00 PM\",\n        available: data[\"4-6\"] || 0\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Validate form inputs\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate registration number length\n    if (bookingForm.name.length !== 15) {\n      setError(\"Registration number should be exactly 15 characters long.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n\n      // Reset form only on successful booking\n      setBookingForm({\n        name: '',\n        email: '',\n        department: 'CSE',\n        date: '',\n        timeSlot: ''\n      });\n\n      // Clear time slots\n      setTimeSlots([]);\n\n      // Fetch available seats again to update the slots\n      handleFetchAvailableSeats(bookingForm.date);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle delete email change\n  const handleDeleteEmailChange = e => {\n    setDeleteEmail(e.target.value);\n    setError('');\n    setSuccess('');\n  };\n\n  // Fetch booked slots for a user\n  const handleFetchBookedSlots = async () => {\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n    if (!deleteEmail) {\n      setError(\"Please enter your email to fetch booked slots.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await fetchBookedSlots(deleteEmail);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for this email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n      setShowBookedSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots\n      handleFetchBookedSlots();\n\n      // Fetch available seats again to update the slots\n      if (bookingForm.date) {\n        handleFetchAvailableSeats(bookingForm.date);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n    setSelectedSlot(null);\n    setError('');\n    setSuccess('');\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n    try {\n      var _user$user_metadata, _user$user_metadata2;\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n      const response = await fetch('/api/book-slot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          name: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.full_name) || user.email,\n          department: ((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.department) || 'Not specified'\n        })\n      });\n      const data = await response.json();\n      setSuccess(data.message);\n      if (response.ok) {\n        // Reset selections after successful booking\n        setSelectedSlot(null);\n      }\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lab-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Your Lab Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookingSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Registration Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: bookingForm.name,\n          onChange: handleBookingChange,\n          required: true,\n          maxLength: \"15\",\n          minLength: \"15\",\n          placeholder: \"Enter your 15-character registration number\",\n          disabled: loading || apiError,\n          title: \"Registration number must be exactly 15 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: bookingForm.email,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department\",\n          name: \"department\",\n          value: bookingForm.department,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CSE\",\n            children: \"Computer Science and Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ME\",\n            children: \"Mechanical Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EEE\",\n            children: \"Electrical and Electronics Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CE\",\n            children: \"Civil Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BT\",\n            children: \"Biotechnology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeSlot\",\n          children: \"Time Slot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeSlot\",\n          name: \"timeSlot\",\n          value: bookingForm.timeSlot,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError || timeSlots.length === 0,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading available slots...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot.value,\n            disabled: slot.available === 0,\n            children: `${slot.label} (${slot.available} seats available)`\n          }, slot.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"bookSlotButton\",\n            className: \"booking-button\",\n            disabled: loading || apiError,\n            children: loading ? 'Booking...' : 'Book Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"delete-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delete Your Booked Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"deleteBookingForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deleteEmail\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"deleteEmail\",\n          name: \"deleteEmail\",\n          value: deleteEmail,\n          onChange: handleDeleteEmailChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"fetchSlotsButton\",\n            onClick: handleFetchBookedSlots,\n            disabled: loading || apiError || !deleteEmail,\n            className: \"action-button\",\n            children: loading ? 'Fetching...' : 'Fetch Booked Slots'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bookedSlotsContainer\",\n        className: showBookedSlots ? '' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Booked Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"bookedSlotsList\",\n          children: bookedSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No slots booked.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this) : bookedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date: \", slot.date, \", Time Slot: \", slot.time_slot, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteBookedSlot(slot.id),\n              disabled: loading || apiError,\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"time-slots\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          min: new Date().toISOString().split('T')[0],\n          value: selectedDate,\n          onChange: handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(TimeSlots, {\n        selectedDate: selectedDate,\n        onSlotSelect: handleSlotSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this), selectedDate && selectedSlot && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"book-button\",\n        onClick: handleBooking,\n        disabled: loading,\n        children: loading ? 'Booking...' : 'Book Slot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"Eb9LFrU/UT4B2TlcugrLJv2QQAU=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","supabase","TimeSlots","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","name","email","department","date","timeSlot","deleteEmail","setDeleteEmail","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","checkServerHealth","isHealthy","today","Date","toISOString","split","document","getElementById","setAttribute","handleBookingChange","e","value","target","prev","handleFetchAvailableSeats","handleRetryConnection","alert","data","availableTimeSlots","label","available","message","includes","handleBookingSubmit","preventDefault","length","toLowerCase","endsWith","handleDeleteEmailChange","handleFetchBookedSlots","handleDeleteBookedSlot","bookingId","window","confirm","handleDateChange","handleSlotSelect","slot","handleBooking","_user$user_metadata","_user$user_metadata2","user","auth","getUser","response","fetch","method","headers","body","JSON","stringify","user_metadata","full_name","json","ok","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","id","onSubmit","htmlFor","type","onChange","required","maxLength","minLength","placeholder","title","pattern","map","time_slot","min","onSlotSelect","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth } from '../services/api';\r\nimport './SlotBooking.css';\r\nimport { supabase } from '../supabaseClient';\r\nimport TimeSlots from '../components/TimeSlots';\r\n\r\nconst SlotBooking = () => {\r\n  // Form state\r\n  const [bookingForm, setBookingForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    department: 'CSE',\r\n    date: '',\r\n    timeSlot: ''\r\n  });\r\n\r\n  // Delete booking form state\r\n  const [deleteEmail, setDeleteEmail] = useState('');\r\n  \r\n  // UI state\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [apiError, setApiError] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n\r\n  // Check API health on component mount\r\n  useEffect(() => {\r\n    const checkServerHealth = async () => {\r\n      const isHealthy = await checkApiHealth();\r\n      setApiError(!isHealthy);\r\n    };\r\n    \r\n    checkServerHealth();\r\n    \r\n    // Set the minimum date to today\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    document.getElementById(\"date\").setAttribute(\"min\", today);\r\n  }, []);\r\n\r\n  // Handle booking form input changes\r\n  const handleBookingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Update the booking form state\r\n    setBookingForm(prev => ({ ...prev, [name]: value }));\r\n\r\n    // Clear previous errors and success messages\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Fetch available seats when date changes\r\n    if (name === 'date' && value) {\r\n      handleFetchAvailableSeats(value);\r\n    }\r\n  };\r\n\r\n  // Retry server connection\r\n  const handleRetryConnection = async () => {\r\n    setLoading(true);\r\n    const isHealthy = await checkApiHealth();\r\n    setApiError(!isHealthy);\r\n    setLoading(false);\r\n    \r\n    if (isHealthy && bookingForm.date) {\r\n      handleFetchAvailableSeats(bookingForm.date);\r\n    }\r\n  };\r\n\r\n  // Fetch available seats for selected date\r\n  const handleFetchAvailableSeats = async (selectedDate) => {\r\n    if (!selectedDate) {\r\n      alert(\"Please select a date to check available slots.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setApiError(false);\r\n    \r\n    try {\r\n      const data = await fetchAvailableSeats(selectedDate);\r\n      \r\n      // Transform data for the time slot dropdown\r\n      const availableTimeSlots = [\r\n        { value: \"9-11\", label: \"9:00 AM - 11:00 AM\", available: data[\"9-11\"] || 0 },\r\n        { value: \"11-1\", label: \"11:00 AM - 1:00 PM\", available: data[\"11-1\"] || 0 },\r\n        { value: \"2-4\", label: \"2:00 PM - 4:00 PM\", available: data[\"2-4\"] || 0 },\r\n        { value: \"4-6\", label: \"4:00 PM - 6:00 PM\", available: data[\"4-6\"] || 0 }\r\n      ];\r\n      \r\n      setTimeSlots(availableTimeSlots);\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle booking form submission\r\n  const handleBookingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    // Validate form inputs\r\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\r\n      setError(\"Please fill out all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    // Validate registration number length\r\n    if (bookingForm.name.length !== 15) {\r\n      setError(\"Registration number should be exactly 15 characters long.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await bookSlot(bookingForm);\r\n      setSuccess(data.message);\r\n      \r\n      // Reset form only on successful booking\r\n      setBookingForm({\r\n        name: '',\r\n        email: '',\r\n        department: 'CSE',\r\n        date: '',\r\n        timeSlot: ''\r\n      });\r\n      \r\n      // Clear time slots\r\n      setTimeSlots([]);\r\n      \r\n      // Fetch available seats again to update the slots\r\n      handleFetchAvailableSeats(bookingForm.date);\r\n      \r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle delete email change\r\n  const handleDeleteEmailChange = (e) => {\r\n    setDeleteEmail(e.target.value);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  // Fetch booked slots for a user\r\n  const handleFetchBookedSlots = async () => {\r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    if (!deleteEmail) {\r\n      setError(\"Please enter your email to fetch booked slots.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await fetchBookedSlots(deleteEmail);\r\n      setBookedSlots(data);\r\n      setShowBookedSlots(true);\r\n      \r\n      if (data.length === 0) {\r\n        setSuccess(\"No booked slots found for this email.\");\r\n      }\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n      setShowBookedSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete a booked slot\r\n  const handleDeleteBookedSlot = async (bookingId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      const data = await deleteBookedSlot(bookingId);\r\n      setSuccess(data.message);\r\n      \r\n      // Refresh the booked slots\r\n      handleFetchBookedSlots();\r\n      \r\n      // Fetch available seats again to update the slots\r\n      if (bookingForm.date) {\r\n        handleFetchAvailableSeats(bookingForm.date);\r\n      }\r\n      \r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n    setSelectedSlot(null);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const handleSlotSelect = (slot) => {\r\n    setSelectedSlot(slot);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const handleBooking = async () => {\r\n    if (!selectedDate || !selectedSlot) {\r\n      setError('Please select both date and time slot.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n\r\n      if (!user) {\r\n        setError('Please sign in to book a slot.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('/api/book-slot', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          date: selectedDate,\r\n          timeSlot: selectedSlot,\r\n          email: user.email,\r\n          name: user.user_metadata?.full_name || user.email,\r\n          department: user.user_metadata?.department || 'Not specified'\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setSuccess(data.message);\r\n      \r\n      if (response.ok) {\r\n        // Reset selections after successful booking\r\n        setSelectedSlot(null);\r\n      }\r\n    } catch (error) {\r\n      setError('Error booking slot. Please try again.');\r\n      console.error('Booking error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {apiError && (\r\n        <div className=\"api-error\">\r\n          <h3>Connection Error</h3>\r\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\r\n          <button \r\n            onClick={handleRetryConnection} \r\n            disabled={loading}\r\n            className=\"action-button\"\r\n          >\r\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\">\r\n          {success}\r\n        </div>\r\n      )}\r\n      \r\n      <section id=\"lab-booking\">\r\n        <h2>Book Your Lab Slot</h2>\r\n        <form onSubmit={handleBookingSubmit}>\r\n          <label htmlFor=\"name\">Registration Number:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            value={bookingForm.name}\r\n            onChange={handleBookingChange}\r\n            required \r\n            maxLength=\"15\"\r\n            minLength=\"15\"\r\n            placeholder=\"Enter your 15-character registration number\"\r\n            disabled={loading || apiError}\r\n            title=\"Registration number must be exactly 15 characters\"\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            value={bookingForm.email}\r\n            onChange={handleBookingChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <label htmlFor=\"department\">Department:</label>\r\n          <select \r\n            id=\"department\" \r\n            name=\"department\" \r\n            value={bookingForm.department}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError}\r\n          >\r\n            <option value=\"CSE\">Computer Science and Engineering</option>\r\n            <option value=\"ME\">Mechanical Engineering</option>\r\n            <option value=\"EEE\">Electrical and Electronics Engineering</option>\r\n            <option value=\"CE\">Civil Engineering</option>\r\n            <option value=\"BT\">Biotechnology</option>\r\n          </select>\r\n\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\" \r\n            name=\"date\" \r\n            value={bookingForm.date}\r\n            onChange={handleBookingChange}\r\n            required \r\n            disabled={loading || apiError}\r\n          />\r\n\r\n          <label htmlFor=\"timeSlot\">Time Slot:</label>\r\n          <select \r\n            id=\"timeSlot\" \r\n            name=\"timeSlot\" \r\n            value={bookingForm.timeSlot}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError || timeSlots.length === 0}\r\n          >\r\n            <option value=\"\">Select a slot</option>\r\n            {loading && timeSlots.length === 0 ? (\r\n              <option value=\"\">Loading available slots...</option>\r\n            ) : timeSlots.length > 0 ? (\r\n              timeSlots.map(slot => (\r\n                <option \r\n                  key={slot.value} \r\n                  value={slot.value}\r\n                  disabled={slot.available === 0}\r\n                >\r\n                  {`${slot.label} (${slot.available} seats available)`}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option value=\"\">Select a date first</option>\r\n            )}\r\n          </select>\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"submit\" \r\n              id=\"bookSlotButton\" \r\n              className=\"booking-button\"\r\n              disabled={loading || apiError}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Slot'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n\r\n      <section id=\"delete-booking\">\r\n        <h2>Delete Your Booked Slot</h2>\r\n        <form id=\"deleteBookingForm\">\r\n          <label htmlFor=\"deleteEmail\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"deleteEmail\" \r\n            name=\"deleteEmail\" \r\n            value={deleteEmail}\r\n            onChange={handleDeleteEmailChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"button\" \r\n              id=\"fetchSlotsButton\" \r\n              onClick={handleFetchBookedSlots}\r\n              disabled={loading || apiError || !deleteEmail}\r\n              className=\"action-button\"\r\n            >\r\n              {loading ? 'Fetching...' : 'Fetch Booked Slots'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div id=\"bookedSlotsContainer\" className={showBookedSlots ? '' : 'hidden'}>\r\n          <h3>Your Booked Slots</h3>\r\n          <ul id=\"bookedSlotsList\">\r\n            {bookedSlots.length === 0 ? (\r\n              <li>No slots booked.</li>\r\n            ) : (\r\n              bookedSlots.map(slot => (\r\n                <li key={slot.id}>\r\n                  Date: {slot.date}, Time Slot: {slot.time_slot}\r\n                  <button \r\n                    onClick={() => handleDeleteBookedSlot(slot.id)}\r\n                    disabled={loading || apiError}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n\r\n      <section id=\"time-slots\">\r\n        <h2>Select Time Slot</h2>\r\n        <div className=\"date-selector\">\r\n          <label htmlFor=\"date\">Select Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            min={new Date().toISOString().split('T')[0]}\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n\r\n        {selectedDate && (\r\n          <TimeSlots\r\n            selectedDate={selectedDate}\r\n            onSlotSelect={handleSlotSelect}\r\n          />\r\n        )}\r\n\r\n        {selectedDate && selectedSlot && (\r\n          <button\r\n            className=\"book-button\"\r\n            onClick={handleBooking}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Booking...' : 'Book Slot'}\r\n          </button>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SlotBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}