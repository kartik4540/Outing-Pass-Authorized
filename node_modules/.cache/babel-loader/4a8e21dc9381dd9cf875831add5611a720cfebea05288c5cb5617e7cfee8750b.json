{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth, API_BASE_URL } from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    timeSlot: ''\n  });\n\n  // Delete booking form state\n  const [deleteEmail, setDeleteEmail] = useState('');\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Check API health on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    checkServerHealth();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    document.getElementById(\"date\").setAttribute(\"min\", today);\n  }, []);\n  useEffect(() => {\n    const initializeBookings = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          await fetchUserBookings();\n        }\n      } catch (error) {\n        console.error('Error initializing bookings:', error);\n      }\n    };\n    initializeBookings();\n  }, []);\n\n  // Handle booking form input changes\n  const handleBookingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Update the booking form state\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear previous errors and success messages\n    setError('');\n    setSuccess('');\n\n    // Fetch available seats when date changes\n    if (name === 'date' && value) {\n      handleFetchAvailableSeats(value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date);\n    }\n  };\n\n  // Fetch available seats for selected date\n  const handleFetchAvailableSeats = async selectedDate => {\n    if (!selectedDate) {\n      alert(\"Please select a date to check available slots.\");\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate);\n\n      // Transform data for the time slot dropdown with availability status only\n      const availableTimeSlots = [{\n        value: \"8:00-8:50\",\n        label: \"8:00 AM - 8:50 AM\",\n        available: data[\"8:00-8:50\"] > 0\n      }, {\n        value: \"9:00-9:50\",\n        label: \"9:00 AM - 9:50 AM\",\n        available: data[\"9:00-9:50\"] > 0\n      }, {\n        value: \"10:00-10:50\",\n        label: \"10:00 AM - 10:50 AM\",\n        available: data[\"10:00-10:50\"] > 0\n      }, {\n        value: \"11:00-11:50\",\n        label: \"11:00 AM - 11:50 AM\",\n        available: data[\"11:00-11:50\"] > 0\n      }, {\n        value: \"12:00-12:50\",\n        label: \"12:00 PM - 12:50 PM\",\n        available: data[\"12:00-12:50\"] > 0\n      }, {\n        value: \"2:00-2:50\",\n        label: \"2:00 PM - 2:50 PM\",\n        available: data[\"2:00-2:50\"] > 0\n      }, {\n        value: \"3:00-3:50\",\n        label: \"3:00 PM - 3:50 PM\",\n        available: data[\"3:00-3:50\"] > 0\n      }, {\n        value: \"4:00-4:50\",\n        label: \"4:00 PM - 4:50 PM\",\n        available: data[\"4:00-4:50\"] > 0\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Validate form inputs\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n\n      // Reset form only on successful booking\n      setBookingForm({\n        facultyId: '',\n        name: '',\n        email: '',\n        department: '',\n        date: '',\n        timeSlot: ''\n      });\n\n      // Clear time slots\n      setTimeSlots([]);\n\n      // Fetch available seats again to update the slots\n      handleFetchAvailableSeats(bookingForm.date);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle delete email change\n  const handleDeleteEmailChange = e => {\n    setDeleteEmail(e.target.value);\n    setError('');\n    setSuccess('');\n  };\n\n  // Fetch booked slots for a user\n  const handleFetchBookedSlots = async () => {\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n    if (!deleteEmail) {\n      setError(\"Please enter your email to fetch booked slots.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await fetchBookedSlots(deleteEmail);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for this email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n      setShowBookedSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots\n      handleFetchBookedSlots();\n\n      // Fetch available seats again to update the slots\n      if (bookingForm.date) {\n        handleFetchAvailableSeats(bookingForm.date);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n    setSelectedSlot(null);\n    setError('');\n    setSuccess('');\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n    try {\n      var _user$user_metadata, _user$user_metadata2;\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          name: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.full_name) || user.email,\n          department: ((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.department) || 'Not specified'\n        })\n      });\n      const data = await response.json();\n      setSuccess(data.message);\n      if (response.ok) {\n        // Reset selections after successful booking\n        setSelectedSlot(null);\n        // Refresh the bookings list\n        fetchUserBookings();\n      }\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchUserBookings = async () => {\n    try {\n      setLoading(true);\n      setMessage('');\n      const {\n        data: {\n          user\n        },\n        error: authError\n      } = await supabase.auth.getUser();\n      if (authError) {\n        console.error('Auth error:', authError);\n        setMessage('Authentication error. Please sign in again.');\n        return;\n      }\n      if (!user) {\n        setMessage('Please sign in to view your bookings.');\n        return;\n      }\n      console.log('Fetching bookings for:', user.email);\n      const response = await fetch(`${API_BASE_URL}/booked-slots?email=${encodeURIComponent(user.email)}`);\n\n      // Check if the response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        console.error('Non-JSON response:', await response.text());\n        throw new Error('Backend server error. Please make sure the server is running.');\n      }\n      const data = await response.json();\n      if (!response.ok) {\n        console.error('Server error:', data);\n        throw new Error(data.error || 'Failed to fetch bookings');\n      }\n      console.log('Fetched bookings:', data);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setMessage('No bookings found.');\n      }\n    } catch (error) {\n      console.error('Error in fetchUserBookings:', error);\n      if (error.message.includes('Failed to fetch') || error.message.includes('Backend server error')) {\n        setApiError(true);\n      } else {\n        setMessage(error.message || 'Error fetching your bookings.');\n      }\n      setShowBookedSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteBooking = async bookingId => {\n    if (!window.confirm('Are you sure you want to delete this booking?')) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/delete-slot/${bookingId}`, {\n        method: 'DELETE'\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Booking deleted successfully!');\n        // Refresh the bookings list\n        fetchUserBookings();\n      } else {\n        setMessage(data.error || 'Error deleting booking.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Error deleting booking.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lab-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Your Lab Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookingSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"facultyId\",\n          children: \"Faculty ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"facultyId\",\n          name: \"facultyId\",\n          value: bookingForm.facultyId,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"Enter your faculty ID\",\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: bookingForm.name,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"Enter your full name\",\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: bookingForm.email,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department\",\n          name: \"department\",\n          value: bookingForm.department,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"NETWORKING\",\n            children: \"Networking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CINTEL\",\n            children: \"CINTEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DSBS\",\n            children: \"DSBS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CTECH\",\n            children: \"CTECH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeSlot\",\n          children: \"Time Slot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeSlot\",\n          name: \"timeSlot\",\n          value: bookingForm.timeSlot,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError || timeSlots.length === 0,\n          className: \"time-slot-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading available slots...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot.value,\n            disabled: !slot.available,\n            className: !slot.available ? 'slot-full' : '',\n            children: `${slot.label} (${slot.available ? 'Available' : 'Booked'})`\n          }, slot.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"bookSlotButton\",\n            className: \"booking-button\",\n            disabled: loading || apiError,\n            children: loading ? 'Booking...' : 'Book Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"delete-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delete Your Booked Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"deleteBookingForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deleteEmail\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"deleteEmail\",\n          name: \"deleteEmail\",\n          value: deleteEmail,\n          onChange: handleDeleteEmailChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"fetchSlotsButton\",\n            onClick: handleFetchBookedSlots,\n            disabled: loading || apiError || !deleteEmail,\n            className: \"action-button\",\n            children: loading ? 'Fetching...' : 'Fetch Booked Slots'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bookedSlotsContainer\",\n        className: showBookedSlots ? '' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Booked Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"bookedSlotsList\",\n          children: bookedSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No slots booked.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this) : bookedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date: \", slot.date, \", Time Slot: \", slot.time_slot, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteBooking(slot.id),\n              disabled: loading || apiError,\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 19\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"rsyALelvsL0izptw3E57rZnq3u8=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","API_BASE_URL","supabase","TimeSlots","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","facultyId","name","email","department","date","timeSlot","deleteEmail","setDeleteEmail","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","message","setMessage","checkServerHealth","isHealthy","today","Date","toISOString","split","document","getElementById","setAttribute","initializeBookings","data","user","auth","getUser","fetchUserBookings","console","handleBookingChange","e","value","target","prev","handleFetchAvailableSeats","handleRetryConnection","alert","availableTimeSlots","label","available","includes","handleBookingSubmit","preventDefault","toLowerCase","endsWith","handleDeleteEmailChange","handleFetchBookedSlots","length","handleDeleteBookedSlot","bookingId","window","confirm","handleDateChange","handleSlotSelect","slot","handleBooking","_user$user_metadata","_user$user_metadata2","response","fetch","method","headers","body","JSON","stringify","user_metadata","full_name","json","ok","authError","log","encodeURIComponent","contentType","get","text","Error","handleDeleteBooking","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","id","onSubmit","htmlFor","type","onChange","required","placeholder","pattern","title","map","time_slot","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth, API_BASE_URL } from '../services/api';\r\nimport './SlotBooking.css';\r\nimport { supabase } from '../supabaseClient';\r\nimport TimeSlots from '../components/TimeSlots';\r\n\r\nconst SlotBooking = () => {\r\n  // Form state\r\n  const [bookingForm, setBookingForm] = useState({\r\n    facultyId: '',\r\n    name: '',\r\n    email: '',\r\n    department: '',\r\n    date: '',\r\n    timeSlot: ''\r\n  });\r\n\r\n  // Delete booking form state\r\n  const [deleteEmail, setDeleteEmail] = useState('');\r\n  \r\n  // UI state\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [apiError, setApiError] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Check API health on component mount\r\n  useEffect(() => {\r\n    const checkServerHealth = async () => {\r\n      const isHealthy = await checkApiHealth();\r\n      setApiError(!isHealthy);\r\n    };\r\n    \r\n    checkServerHealth();\r\n    \r\n    // Set the minimum date to today\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    document.getElementById(\"date\").setAttribute(\"min\", today);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initializeBookings = async () => {\r\n      try {\r\n        const { data: { user } } = await supabase.auth.getUser();\r\n        if (user) {\r\n          await fetchUserBookings();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing bookings:', error);\r\n      }\r\n    };\r\n\r\n    initializeBookings();\r\n  }, []);\r\n\r\n  // Handle booking form input changes\r\n  const handleBookingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Update the booking form state\r\n    setBookingForm(prev => ({ ...prev, [name]: value }));\r\n\r\n    // Clear previous errors and success messages\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Fetch available seats when date changes\r\n    if (name === 'date' && value) {\r\n      handleFetchAvailableSeats(value);\r\n    }\r\n  };\r\n\r\n  // Retry server connection\r\n  const handleRetryConnection = async () => {\r\n    setLoading(true);\r\n    const isHealthy = await checkApiHealth();\r\n    setApiError(!isHealthy);\r\n    setLoading(false);\r\n    \r\n    if (isHealthy && bookingForm.date) {\r\n      handleFetchAvailableSeats(bookingForm.date);\r\n    }\r\n  };\r\n\r\n  // Fetch available seats for selected date\r\n  const handleFetchAvailableSeats = async (selectedDate) => {\r\n    if (!selectedDate) {\r\n      alert(\"Please select a date to check available slots.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setApiError(false);\r\n    \r\n    try {\r\n      const data = await fetchAvailableSeats(selectedDate);\r\n      \r\n      // Transform data for the time slot dropdown with availability status only\r\n      const availableTimeSlots = [\r\n        { value: \"8:00-8:50\", label: \"8:00 AM - 8:50 AM\", available: data[\"8:00-8:50\"] > 0 },\r\n        { value: \"9:00-9:50\", label: \"9:00 AM - 9:50 AM\", available: data[\"9:00-9:50\"] > 0 },\r\n        { value: \"10:00-10:50\", label: \"10:00 AM - 10:50 AM\", available: data[\"10:00-10:50\"] > 0 },\r\n        { value: \"11:00-11:50\", label: \"11:00 AM - 11:50 AM\", available: data[\"11:00-11:50\"] > 0 },\r\n        { value: \"12:00-12:50\", label: \"12:00 PM - 12:50 PM\", available: data[\"12:00-12:50\"] > 0 },\r\n        { value: \"2:00-2:50\", label: \"2:00 PM - 2:50 PM\", available: data[\"2:00-2:50\"] > 0 },\r\n        { value: \"3:00-3:50\", label: \"3:00 PM - 3:50 PM\", available: data[\"3:00-3:50\"] > 0 },\r\n        { value: \"4:00-4:50\", label: \"4:00 PM - 4:50 PM\", available: data[\"4:00-4:50\"] > 0 }\r\n      ];\r\n      \r\n      setTimeSlots(availableTimeSlots);\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle booking form submission\r\n  const handleBookingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    // Validate form inputs\r\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\r\n      setError(\"Please fill out all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await bookSlot(bookingForm);\r\n      setSuccess(data.message);\r\n      \r\n      // Reset form only on successful booking\r\n      setBookingForm({\r\n        facultyId: '',\r\n        name: '',\r\n        email: '',\r\n        department: '',\r\n        date: '',\r\n        timeSlot: ''\r\n      });\r\n      \r\n      // Clear time slots\r\n      setTimeSlots([]);\r\n      \r\n      // Fetch available seats again to update the slots\r\n      handleFetchAvailableSeats(bookingForm.date);\r\n      \r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle delete email change\r\n  const handleDeleteEmailChange = (e) => {\r\n    setDeleteEmail(e.target.value);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  // Fetch booked slots for a user\r\n  const handleFetchBookedSlots = async () => {\r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    if (!deleteEmail) {\r\n      setError(\"Please enter your email to fetch booked slots.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await fetchBookedSlots(deleteEmail);\r\n      setBookedSlots(data);\r\n      setShowBookedSlots(true);\r\n      \r\n      if (data.length === 0) {\r\n        setSuccess(\"No booked slots found for this email.\");\r\n      }\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n      setShowBookedSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete a booked slot\r\n  const handleDeleteBookedSlot = async (bookingId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      const data = await deleteBookedSlot(bookingId);\r\n      setSuccess(data.message);\r\n      \r\n      // Refresh the booked slots\r\n      handleFetchBookedSlots();\r\n      \r\n      // Fetch available seats again to update the slots\r\n      if (bookingForm.date) {\r\n        handleFetchAvailableSeats(bookingForm.date);\r\n      }\r\n      \r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n    setSelectedSlot(null);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const handleSlotSelect = (slot) => {\r\n    setSelectedSlot(slot);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const handleBooking = async () => {\r\n    if (!selectedDate || !selectedSlot) {\r\n      setError('Please select both date and time slot.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n\r\n      if (!user) {\r\n        setError('Please sign in to book a slot.');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          date: selectedDate,\r\n          timeSlot: selectedSlot,\r\n          email: user.email,\r\n          name: user.user_metadata?.full_name || user.email,\r\n          department: user.user_metadata?.department || 'Not specified'\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setSuccess(data.message);\r\n      \r\n      if (response.ok) {\r\n        // Reset selections after successful booking\r\n        setSelectedSlot(null);\r\n        // Refresh the bookings list\r\n        fetchUserBookings();\r\n      }\r\n    } catch (error) {\r\n      setError('Error booking slot. Please try again.');\r\n      console.error('Booking error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchUserBookings = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setMessage('');\r\n      \r\n      const { data: { user }, error: authError } = await supabase.auth.getUser();\r\n      \r\n      if (authError) {\r\n        console.error('Auth error:', authError);\r\n        setMessage('Authentication error. Please sign in again.');\r\n        return;\r\n      }\r\n      \r\n      if (!user) {\r\n        setMessage('Please sign in to view your bookings.');\r\n        return;\r\n      }\r\n\r\n      console.log('Fetching bookings for:', user.email);\r\n      const response = await fetch(`${API_BASE_URL}/booked-slots?email=${encodeURIComponent(user.email)}`);\r\n      \r\n      // Check if the response is JSON\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (!contentType || !contentType.includes(\"application/json\")) {\r\n        console.error('Non-JSON response:', await response.text());\r\n        throw new Error('Backend server error. Please make sure the server is running.');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        console.error('Server error:', data);\r\n        throw new Error(data.error || 'Failed to fetch bookings');\r\n      }\r\n      \r\n      console.log('Fetched bookings:', data);\r\n      \r\n      setBookedSlots(data);\r\n      setShowBookedSlots(true);\r\n      \r\n      if (data.length === 0) {\r\n        setMessage('No bookings found.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in fetchUserBookings:', error);\r\n      if (error.message.includes('Failed to fetch') || error.message.includes('Backend server error')) {\r\n        setApiError(true);\r\n      } else {\r\n        setMessage(error.message || 'Error fetching your bookings.');\r\n      }\r\n      setShowBookedSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteBooking = async (bookingId) => {\r\n    if (!window.confirm('Are you sure you want to delete this booking?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/delete-slot/${bookingId}`, {\r\n        method: 'DELETE'\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setMessage('Booking deleted successfully!');\r\n        // Refresh the bookings list\r\n        fetchUserBookings();\r\n      } else {\r\n        setMessage(data.error || 'Error deleting booking.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessage('Error deleting booking.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {apiError && (\r\n        <div className=\"api-error\">\r\n          <h3>Connection Error</h3>\r\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\r\n          <button \r\n            onClick={handleRetryConnection} \r\n            disabled={loading}\r\n            className=\"action-button\"\r\n          >\r\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\">\r\n          {success}\r\n        </div>\r\n      )}\r\n      \r\n      {message && (\r\n        <div className={`message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n      \r\n      <section id=\"lab-booking\">\r\n        <h2>Book Your Lab Slot</h2>\r\n        <form onSubmit={handleBookingSubmit}>\r\n          <label htmlFor=\"facultyId\">Faculty ID:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"facultyId\" \r\n            name=\"facultyId\" \r\n            value={bookingForm.facultyId}\r\n            onChange={handleBookingChange}\r\n            required \r\n            placeholder=\"Enter your faculty ID\"\r\n            disabled={loading || apiError}\r\n          />\r\n\r\n          <label htmlFor=\"name\">Full Name:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            value={bookingForm.name}\r\n            onChange={handleBookingChange}\r\n            required \r\n            placeholder=\"Enter your full name\"\r\n            disabled={loading || apiError}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            value={bookingForm.email}\r\n            onChange={handleBookingChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <label htmlFor=\"department\">Department:</label>\r\n          <select \r\n            id=\"department\" \r\n            name=\"department\" \r\n            value={bookingForm.department}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError}\r\n          >\r\n            <option value=\"\">Select Department</option>\r\n            <option value=\"NETWORKING\">Networking</option>\r\n            <option value=\"CINTEL\">CINTEL</option>\r\n            <option value=\"DSBS\">DSBS</option>\r\n            <option value=\"CTECH\">CTECH</option>\r\n          </select>\r\n\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\" \r\n            name=\"date\" \r\n            value={bookingForm.date}\r\n            onChange={handleBookingChange}\r\n            required \r\n            disabled={loading || apiError}\r\n          />\r\n\r\n          <label htmlFor=\"timeSlot\">Time Slot:</label>\r\n          <select \r\n            id=\"timeSlot\" \r\n            name=\"timeSlot\" \r\n            value={bookingForm.timeSlot}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError || timeSlots.length === 0}\r\n            className=\"time-slot-select\"\r\n          >\r\n            <option value=\"\">Select a slot</option>\r\n            {loading && timeSlots.length === 0 ? (\r\n              <option value=\"\">Loading available slots...</option>\r\n            ) : timeSlots.length > 0 ? (\r\n              timeSlots.map(slot => (\r\n                <option \r\n                  key={slot.value} \r\n                  value={slot.value}\r\n                  disabled={!slot.available}\r\n                  className={!slot.available ? 'slot-full' : ''}\r\n                >\r\n                  {`${slot.label} (${slot.available ? 'Available' : 'Booked'})`}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option value=\"\">Select a date first</option>\r\n            )}\r\n          </select>\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"submit\" \r\n              id=\"bookSlotButton\" \r\n              className=\"booking-button\"\r\n              disabled={loading || apiError}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Slot'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n\r\n      <section id=\"delete-booking\">\r\n        <h2>Delete Your Booked Slot</h2>\r\n        <form id=\"deleteBookingForm\">\r\n          <label htmlFor=\"deleteEmail\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"deleteEmail\" \r\n            name=\"deleteEmail\" \r\n            value={deleteEmail}\r\n            onChange={handleDeleteEmailChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"button\" \r\n              id=\"fetchSlotsButton\" \r\n              onClick={handleFetchBookedSlots}\r\n              disabled={loading || apiError || !deleteEmail}\r\n              className=\"action-button\"\r\n            >\r\n              {loading ? 'Fetching...' : 'Fetch Booked Slots'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div id=\"bookedSlotsContainer\" className={showBookedSlots ? '' : 'hidden'}>\r\n          <h3>Your Booked Slots</h3>\r\n          <ul id=\"bookedSlotsList\">\r\n            {bookedSlots.length === 0 ? (\r\n              <li>No slots booked.</li>\r\n            ) : (\r\n              bookedSlots.map(slot => (\r\n                <li key={slot.id}>\r\n                  Date: {slot.date}, Time Slot: {slot.time_slot}\r\n                  <button \r\n                    onClick={() => handleDeleteBooking(slot.id)}\r\n                    disabled={loading || apiError}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SlotBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}