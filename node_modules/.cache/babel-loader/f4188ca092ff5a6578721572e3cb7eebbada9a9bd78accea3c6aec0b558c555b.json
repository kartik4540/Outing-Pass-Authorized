{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\KARTIK\\\\random project\\\\fswd\\\\SRMLAB\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SlotBooking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    name: '',\n    email: '',\n    department: 'CSE',\n    date: '',\n    timeSlot: ''\n  });\n\n  // Delete booking form state\n  const [deleteEmail, setDeleteEmail] = useState('');\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\n\n  // Set minimum date to today\n  useEffect(() => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    document.getElementById(\"date\").setAttribute(\"min\", today);\n  }, []);\n\n  // Handle booking form input changes\n  const handleBookingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Fetch available seats when date changes\n    if (name === 'date' && value) {\n      fetchAvailableSeats(value);\n    }\n  };\n\n  // Fetch available seats for selected date\n  const fetchAvailableSeats = async selectedDate => {\n    if (!selectedDate) {\n      alert(\"Please select a date to check available slots.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://127.0.0.1:8080/api/available-seats?date=${selectedDate}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch available seats. Please try again.\");\n      }\n      const data = await response.json();\n\n      // Transform data for the time slot dropdown\n      const availableTimeSlots = [{\n        value: \"9-11\",\n        label: \"9:00 AM - 11:00 AM\",\n        available: data[\"9-11\"] || 0\n      }, {\n        value: \"11-1\",\n        label: \"11:00 AM - 1:00 PM\",\n        available: data[\"11-1\"] || 0\n      }, {\n        value: \"2-4\",\n        label: \"2:00 PM - 4:00 PM\",\n        available: data[\"2-4\"] || 0\n      }, {\n        value: \"4-6\",\n        label: \"4:00 PM - 6:00 PM\",\n        available: data[\"4-6\"] || 0\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      console.error(\"Error fetching available seats:\", error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form inputs\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      alert(\"Please fill out all fields before submitting.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch('http://127.0.0.1:8080/api/book-slot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingForm)\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.message);\n      }\n      const data = await response.json();\n      alert(data.message);\n\n      // Reset form and refresh available seats\n      setBookingForm({\n        name: '',\n        email: '',\n        department: 'CSE',\n        date: '',\n        timeSlot: ''\n      });\n\n      // If a date is still selected, refresh available seats\n      if (bookingForm.date) {\n        fetchAvailableSeats(bookingForm.date);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle delete email change\n  const handleDeleteEmailChange = e => {\n    setDeleteEmail(e.target.value);\n  };\n\n  // Fetch booked slots for a user\n  const fetchBookedSlots = async () => {\n    if (!deleteEmail) {\n      alert(\"Please enter your email to fetch booked slots.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://127.0.0.1:8080/api/booked-slots?email=${encodeURIComponent(deleteEmail)}`);\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error);\n      }\n      const data = await response.json();\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const deleteBookedSlot = async bookingId => {\n    if (!confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://127.0.0.1:8080/api/delete-slot/${bookingId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const errData = await response.json();\n        throw new Error(errData.error);\n      }\n      const data = await response.json();\n      alert(data.message);\n\n      // Refresh the booked slots\n      fetchBookedSlots();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lab-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Your Lab Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"labBookingForm\",\n        onSubmit: handleBookingSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Registration Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: bookingForm.name,\n          onChange: handleBookingChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: bookingForm.email,\n          onChange: handleBookingChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department\",\n          name: \"department\",\n          value: bookingForm.department,\n          onChange: handleBookingChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CSE\",\n            children: \"Computer Science and Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ME\",\n            children: \"Mechanical Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EEE\",\n            children: \"Electrical and Electronics Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CE\",\n            children: \"Civil Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BT\",\n            children: \"Biotechnology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeSlot\",\n          children: \"Time Slot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeSlot\",\n          name: \"timeSlot\",\n          value: bookingForm.timeSlot,\n          onChange: handleBookingChange,\n          required: true,\n          children: loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading available slots...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot.value,\n            disabled: slot.available === 0,\n            children: `${slot.label} (${slot.available} seats available)`\n          }, slot.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"bookSlotButton\",\n            disabled: loading,\n            children: loading ? 'Booking...' : 'Book Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"delete-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delete Your Booked Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"deleteBookingForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deleteEmail\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"deleteEmail\",\n          name: \"deleteEmail\",\n          value: deleteEmail,\n          onChange: handleDeleteEmailChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"fetchSlotsButton\",\n            onClick: fetchBookedSlots,\n            disabled: loading,\n            children: loading ? 'Fetching...' : 'Fetch Booked Slots'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bookedSlotsContainer\",\n        className: showBookedSlots ? '' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Booked Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"bookedSlotsList\",\n          children: bookedSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No slots booked.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this) : bookedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date: \", slot.date, \", Time Slot: \", slot.time_slot, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteBookedSlot(slot.id),\n              disabled: loading,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 19\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"SKZE4KYUlUaS3Cormwmy7tweBHI=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","name","email","department","date","timeSlot","deleteEmail","setDeleteEmail","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","today","Date","toISOString","split","document","getElementById","setAttribute","handleBookingChange","e","value","target","prev","fetchAvailableSeats","selectedDate","alert","response","fetch","ok","Error","data","json","availableTimeSlots","label","available","error","console","message","handleBookingSubmit","preventDefault","method","headers","body","JSON","stringify","errData","handleDeleteEmailChange","fetchBookedSlots","encodeURIComponent","deleteBookedSlot","bookingId","confirm","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","length","map","slot","disabled","className","onClick","time_slot","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/KARTIK/random project/fswd/SRMLAB/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SlotBooking.css';\r\n\r\nconst SlotBooking = () => {\r\n  // Form state\r\n  const [bookingForm, setBookingForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    department: 'CSE',\r\n    date: '',\r\n    timeSlot: ''\r\n  });\r\n\r\n  // Delete booking form state\r\n  const [deleteEmail, setDeleteEmail] = useState('');\r\n  \r\n  // UI state\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\r\n\r\n  // Set minimum date to today\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    document.getElementById(\"date\").setAttribute(\"min\", today);\r\n  }, []);\r\n\r\n  // Handle booking form input changes\r\n  const handleBookingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setBookingForm(prev => ({ ...prev, [name]: value }));\r\n\r\n    // Fetch available seats when date changes\r\n    if (name === 'date' && value) {\r\n      fetchAvailableSeats(value);\r\n    }\r\n  };\r\n\r\n  // Fetch available seats for selected date\r\n  const fetchAvailableSeats = async (selectedDate) => {\r\n    if (!selectedDate) {\r\n      alert(\"Please select a date to check available slots.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8080/api/available-seats?date=${selectedDate}`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch available seats. Please try again.\");\r\n      }\r\n      const data = await response.json();\r\n      \r\n      // Transform data for the time slot dropdown\r\n      const availableTimeSlots = [\r\n        { value: \"9-11\", label: \"9:00 AM - 11:00 AM\", available: data[\"9-11\"] || 0 },\r\n        { value: \"11-1\", label: \"11:00 AM - 1:00 PM\", available: data[\"11-1\"] || 0 },\r\n        { value: \"2-4\", label: \"2:00 PM - 4:00 PM\", available: data[\"2-4\"] || 0 },\r\n        { value: \"4-6\", label: \"4:00 PM - 6:00 PM\", available: data[\"4-6\"] || 0 }\r\n      ];\r\n      \r\n      setTimeSlots(availableTimeSlots);\r\n    } catch (error) {\r\n      console.error(\"Error fetching available seats:\", error);\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle booking form submission\r\n  const handleBookingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate form inputs\r\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\r\n      alert(\"Please fill out all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8080/api/book-slot', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bookingForm)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.message);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      alert(data.message);\r\n      \r\n      // Reset form and refresh available seats\r\n      setBookingForm({\r\n        name: '',\r\n        email: '',\r\n        department: 'CSE',\r\n        date: '',\r\n        timeSlot: ''\r\n      });\r\n      \r\n      // If a date is still selected, refresh available seats\r\n      if (bookingForm.date) {\r\n        fetchAvailableSeats(bookingForm.date);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle delete email change\r\n  const handleDeleteEmailChange = (e) => {\r\n    setDeleteEmail(e.target.value);\r\n  };\r\n\r\n  // Fetch booked slots for a user\r\n  const fetchBookedSlots = async () => {\r\n    if (!deleteEmail) {\r\n      alert(\"Please enter your email to fetch booked slots.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `http://127.0.0.1:8080/api/booked-slots?email=${encodeURIComponent(deleteEmail)}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setBookedSlots(data);\r\n      setShowBookedSlots(true);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete a booked slot\r\n  const deleteBookedSlot = async (bookingId) => {\r\n    if (!confirm(\"Are you sure you want to delete this slot?\")) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8080/api/delete-slot/${bookingId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        throw new Error(errData.error);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      alert(data.message);\r\n      \r\n      // Refresh the booked slots\r\n      fetchBookedSlots();\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section id=\"lab-booking\">\r\n        <h2>Book Your Lab Slot</h2>\r\n        <form id=\"labBookingForm\" onSubmit={handleBookingSubmit}>\r\n          <label htmlFor=\"name\">Registration Number:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            value={bookingForm.name}\r\n            onChange={handleBookingChange}\r\n            required \r\n          />\r\n\r\n          <label htmlFor=\"email\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            value={bookingForm.email}\r\n            onChange={handleBookingChange}\r\n            required \r\n          />\r\n\r\n          <label htmlFor=\"department\">Department:</label>\r\n          <select \r\n            id=\"department\" \r\n            name=\"department\" \r\n            value={bookingForm.department}\r\n            onChange={handleBookingChange}\r\n            required\r\n          >\r\n            <option value=\"CSE\">Computer Science and Engineering</option>\r\n            <option value=\"ME\">Mechanical Engineering</option>\r\n            <option value=\"EEE\">Electrical and Electronics Engineering</option>\r\n            <option value=\"CE\">Civil Engineering</option>\r\n            <option value=\"BT\">Biotechnology</option>\r\n          </select>\r\n\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\" \r\n            name=\"date\" \r\n            value={bookingForm.date}\r\n            onChange={handleBookingChange}\r\n            required \r\n          />\r\n\r\n          <label htmlFor=\"timeSlot\">Time Slot:</label>\r\n          <select \r\n            id=\"timeSlot\" \r\n            name=\"timeSlot\" \r\n            value={bookingForm.timeSlot}\r\n            onChange={handleBookingChange}\r\n            required\r\n          >\r\n            {loading && timeSlots.length === 0 ? (\r\n              <option value=\"\">Loading available slots...</option>\r\n            ) : timeSlots.length > 0 ? (\r\n              timeSlots.map(slot => (\r\n                <option \r\n                  key={slot.value} \r\n                  value={slot.value}\r\n                  disabled={slot.available === 0}\r\n                >\r\n                  {`${slot.label} (${slot.available} seats available)`}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option value=\"\">Select a date first</option>\r\n            )}\r\n          </select>\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"submit\" \r\n              id=\"bookSlotButton\" \r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Slot'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n\r\n      <section id=\"delete-booking\">\r\n        <h2>Delete Your Booked Slot</h2>\r\n        <form id=\"deleteBookingForm\">\r\n          <label htmlFor=\"deleteEmail\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"deleteEmail\" \r\n            name=\"deleteEmail\" \r\n            value={deleteEmail}\r\n            onChange={handleDeleteEmailChange}\r\n            required \r\n          />\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"button\" \r\n              id=\"fetchSlotsButton\" \r\n              onClick={fetchBookedSlots}\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Fetching...' : 'Fetch Booked Slots'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div id=\"bookedSlotsContainer\" className={showBookedSlots ? '' : 'hidden'}>\r\n          <h3>Your Booked Slots</h3>\r\n          <ul id=\"bookedSlotsList\">\r\n            {bookedSlots.length === 0 ? (\r\n              <li>No slots booked.</li>\r\n            ) : (\r\n              bookedSlots.map(slot => (\r\n                <li key={slot.id}>\r\n                  Date: {slot.date}, Time Slot: {slot.time_slot}\r\n                  <button \r\n                    onClick={() => deleteBookedSlot(slot.id)}\r\n                    disabled={loading}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SlotBooking; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}