{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\KARTIK\\\\random project\\\\fswd\\\\SRMLAB\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth } from '../services/api';\nimport './SlotBooking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    name: '',\n    email: '',\n    department: 'CSE',\n    date: '',\n    timeSlot: ''\n  });\n\n  // Delete booking form state\n  const [deleteEmail, setDeleteEmail] = useState('');\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n\n  // Check API health on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    checkServerHealth();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    document.getElementById(\"date\").setAttribute(\"min\", today);\n  }, []);\n\n  // Handle booking form input changes\n  const handleBookingChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Remove the digit-only validation for registration number\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear previous errors and success messages\n    setError('');\n    setSuccess('');\n\n    // Fetch available seats when date changes\n    if (name === 'date' && value) {\n      handleFetchAvailableSeats(value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date);\n    }\n  };\n\n  // Fetch available seats for selected date\n  const handleFetchAvailableSeats = async selectedDate => {\n    if (!selectedDate) {\n      alert(\"Please select a date to check available slots.\");\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate);\n\n      // Transform data for the time slot dropdown\n      const availableTimeSlots = [{\n        value: \"9-11\",\n        label: \"9:00 AM - 11:00 AM\",\n        available: data[\"9-11\"] || 0\n      }, {\n        value: \"11-1\",\n        label: \"11:00 AM - 1:00 PM\",\n        available: data[\"11-1\"] || 0\n      }, {\n        value: \"2-4\",\n        label: \"2:00 PM - 4:00 PM\",\n        available: data[\"2-4\"] || 0\n      }, {\n        value: \"4-6\",\n        label: \"4:00 PM - 6:00 PM\",\n        available: data[\"4-6\"] || 0\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Validate form inputs\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate registration number length\n    if (bookingForm.name.length !== 15) {\n      setError(\"Registration number should be exactly 15 characters long.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n\n      // Reset form only on successful booking\n      setBookingForm({\n        name: '',\n        email: '',\n        department: 'CSE',\n        date: '',\n        timeSlot: ''\n      });\n\n      // Clear time slots\n      setTimeSlots([]);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle delete email change\n  const handleDeleteEmailChange = e => {\n    setDeleteEmail(e.target.value);\n    setError('');\n    setSuccess('');\n  };\n\n  // Fetch booked slots for a user\n  const handleFetchBookedSlots = async () => {\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n    if (!deleteEmail) {\n      setError(\"Please enter your email to fetch booked slots.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await fetchBookedSlots(deleteEmail);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for this email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n      setShowBookedSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots\n      handleFetchBookedSlots();\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lab-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Your Lab Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookingSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Registration Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: bookingForm.name,\n          onChange: handleBookingChange,\n          required: true,\n          maxLength: \"15\",\n          minLength: \"15\",\n          placeholder: \"Enter your 15-character registration number\",\n          disabled: loading || apiError,\n          title: \"Registration number must be exactly 15 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: bookingForm.email,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department\",\n          name: \"department\",\n          value: bookingForm.department,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CSE\",\n            children: \"Computer Science and Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ME\",\n            children: \"Mechanical Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EEE\",\n            children: \"Electrical and Electronics Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CE\",\n            children: \"Civil Engineering\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BT\",\n            children: \"Biotechnology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeSlot\",\n          children: \"Time Slot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeSlot\",\n          name: \"timeSlot\",\n          value: bookingForm.timeSlot,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError || timeSlots.length === 0,\n          children: loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading available slots...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot.value,\n            disabled: slot.available === 0,\n            children: `${slot.label} (${slot.available} seats available)`\n          }, slot.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"bookSlotButton\",\n            className: \"booking-button\",\n            disabled: loading || apiError,\n            children: loading ? 'Booking...' : 'Book Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"delete-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Delete Your Booked Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"deleteBookingForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"deleteEmail\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"deleteEmail\",\n          name: \"deleteEmail\",\n          value: deleteEmail,\n          onChange: handleDeleteEmailChange,\n          required: true,\n          placeholder: \"youremail@srmist.edu.in\",\n          disabled: loading || apiError,\n          pattern: \".*@srmist\\\\.edu\\\\.in\",\n          title: \"Please use an email ending with @srmist.edu.in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"fetchSlotsButton\",\n            onClick: handleFetchBookedSlots,\n            disabled: loading || apiError || !deleteEmail,\n            className: \"action-button\",\n            children: loading ? 'Fetching...' : 'Fetch Booked Slots'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bookedSlotsContainer\",\n        className: showBookedSlots ? '' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Booked Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"bookedSlotsList\",\n          children: bookedSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No slots booked.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this) : bookedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Date: \", slot.date, \", Time Slot: \", slot.time_slot, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteBookedSlot(slot.id),\n              disabled: loading || apiError,\n              className: \"delete-button\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this)]\n          }, slot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"rukVnVbIqM3fD5m0IneDEqFd0zE=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","name","email","department","date","timeSlot","deleteEmail","setDeleteEmail","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","checkServerHealth","isHealthy","today","Date","toISOString","split","document","getElementById","setAttribute","handleBookingChange","e","value","target","prev","handleFetchAvailableSeats","handleRetryConnection","selectedDate","alert","data","availableTimeSlots","label","available","message","includes","handleBookingSubmit","preventDefault","length","toLowerCase","endsWith","handleDeleteEmailChange","handleFetchBookedSlots","handleDeleteBookedSlot","bookingId","window","confirm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","id","onSubmit","htmlFor","type","onChange","required","maxLength","minLength","placeholder","title","pattern","map","slot","time_slot","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/KARTIK/random project/fswd/SRMLAB/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth } from '../services/api';\r\nimport './SlotBooking.css';\r\n\r\nconst SlotBooking = () => {\r\n  // Form state\r\n  const [bookingForm, setBookingForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    department: 'CSE',\r\n    date: '',\r\n    timeSlot: ''\r\n  });\r\n\r\n  // Delete booking form state\r\n  const [deleteEmail, setDeleteEmail] = useState('');\r\n  \r\n  // UI state\r\n  const [timeSlots, setTimeSlots] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [bookedSlots, setBookedSlots] = useState([]);\r\n  const [showBookedSlots, setShowBookedSlots] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [apiError, setApiError] = useState(false);\r\n\r\n  // Check API health on component mount\r\n  useEffect(() => {\r\n    const checkServerHealth = async () => {\r\n      const isHealthy = await checkApiHealth();\r\n      setApiError(!isHealthy);\r\n    };\r\n    \r\n    checkServerHealth();\r\n    \r\n    // Set the minimum date to today\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    document.getElementById(\"date\").setAttribute(\"min\", today);\r\n  }, []);\r\n\r\n  // Handle booking form input changes\r\n  const handleBookingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Remove the digit-only validation for registration number\r\n    setBookingForm(prev => ({ ...prev, [name]: value }));\r\n\r\n    // Clear previous errors and success messages\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Fetch available seats when date changes\r\n    if (name === 'date' && value) {\r\n      handleFetchAvailableSeats(value);\r\n    }\r\n  };\r\n\r\n  // Retry server connection\r\n  const handleRetryConnection = async () => {\r\n    setLoading(true);\r\n    const isHealthy = await checkApiHealth();\r\n    setApiError(!isHealthy);\r\n    setLoading(false);\r\n    \r\n    if (isHealthy && bookingForm.date) {\r\n      handleFetchAvailableSeats(bookingForm.date);\r\n    }\r\n  };\r\n\r\n  // Fetch available seats for selected date\r\n  const handleFetchAvailableSeats = async (selectedDate) => {\r\n    if (!selectedDate) {\r\n      alert(\"Please select a date to check available slots.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setApiError(false);\r\n    \r\n    try {\r\n      const data = await fetchAvailableSeats(selectedDate);\r\n      \r\n      // Transform data for the time slot dropdown\r\n      const availableTimeSlots = [\r\n        { value: \"9-11\", label: \"9:00 AM - 11:00 AM\", available: data[\"9-11\"] || 0 },\r\n        { value: \"11-1\", label: \"11:00 AM - 1:00 PM\", available: data[\"11-1\"] || 0 },\r\n        { value: \"2-4\", label: \"2:00 PM - 4:00 PM\", available: data[\"2-4\"] || 0 },\r\n        { value: \"4-6\", label: \"4:00 PM - 6:00 PM\", available: data[\"4-6\"] || 0 }\r\n      ];\r\n      \r\n      setTimeSlots(availableTimeSlots);\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle booking form submission\r\n  const handleBookingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    // Validate form inputs\r\n    if (!bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\r\n      setError(\"Please fill out all fields before submitting.\");\r\n      return;\r\n    }\r\n\r\n    // Validate registration number length\r\n    if (bookingForm.name.length !== 15) {\r\n      setError(\"Registration number should be exactly 15 characters long.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await bookSlot(bookingForm);\r\n      setSuccess(data.message);\r\n      \r\n      // Reset form only on successful booking\r\n      setBookingForm({\r\n        name: '',\r\n        email: '',\r\n        department: 'CSE',\r\n        date: '',\r\n        timeSlot: ''\r\n      });\r\n      \r\n      // Clear time slots\r\n      setTimeSlots([]);\r\n      \r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle delete email change\r\n  const handleDeleteEmailChange = (e) => {\r\n    setDeleteEmail(e.target.value);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  // Fetch booked slots for a user\r\n  const handleFetchBookedSlots = async () => {\r\n    // Clear previous messages\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    if (!deleteEmail) {\r\n      setError(\"Please enter your email to fetch booked slots.\");\r\n      return;\r\n    }\r\n\r\n    // Validate SRM email\r\n    if (!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')) {\r\n      setError(\"Please use an email ending with @srmist.edu.in\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const data = await fetchBookedSlots(deleteEmail);\r\n      setBookedSlots(data);\r\n      setShowBookedSlots(true);\r\n      \r\n      if (data.length === 0) {\r\n        setSuccess(\"No booked slots found for this email.\");\r\n      }\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n      setShowBookedSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete a booked slot\r\n  const handleDeleteBookedSlot = async (bookingId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    \r\n    try {\r\n      const data = await deleteBookedSlot(bookingId);\r\n      setSuccess(data.message);\r\n      \r\n      // Refresh the booked slots\r\n      handleFetchBookedSlots();\r\n    } catch (error) {\r\n      if (error.message.includes('Backend server is not running')) {\r\n        setApiError(true);\r\n      } else {\r\n        setError(error.message);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      {apiError && (\r\n        <div className=\"api-error\">\r\n          <h3>Connection Error</h3>\r\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\r\n          <button \r\n            onClick={handleRetryConnection} \r\n            disabled={loading}\r\n            className=\"action-button\"\r\n          >\r\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\r\n          </button>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n      \r\n      {success && (\r\n        <div className=\"success-message\">\r\n          {success}\r\n        </div>\r\n      )}\r\n      \r\n      <section id=\"lab-booking\">\r\n        <h2>Book Your Lab Slot</h2>\r\n        <form onSubmit={handleBookingSubmit}>\r\n          <label htmlFor=\"name\">Registration Number:</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"name\" \r\n            name=\"name\" \r\n            value={bookingForm.name}\r\n            onChange={handleBookingChange}\r\n            required \r\n            maxLength=\"15\"\r\n            minLength=\"15\"\r\n            placeholder=\"Enter your 15-character registration number\"\r\n            disabled={loading || apiError}\r\n            title=\"Registration number must be exactly 15 characters\"\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            name=\"email\" \r\n            value={bookingForm.email}\r\n            onChange={handleBookingChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <label htmlFor=\"department\">Department:</label>\r\n          <select \r\n            id=\"department\" \r\n            name=\"department\" \r\n            value={bookingForm.department}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError}\r\n          >\r\n            <option value=\"CSE\">Computer Science and Engineering</option>\r\n            <option value=\"ME\">Mechanical Engineering</option>\r\n            <option value=\"EEE\">Electrical and Electronics Engineering</option>\r\n            <option value=\"CE\">Civil Engineering</option>\r\n            <option value=\"BT\">Biotechnology</option>\r\n          </select>\r\n\r\n          <label htmlFor=\"date\">Date:</label>\r\n          <input \r\n            type=\"date\" \r\n            id=\"date\" \r\n            name=\"date\" \r\n            value={bookingForm.date}\r\n            onChange={handleBookingChange}\r\n            required \r\n            disabled={loading || apiError}\r\n          />\r\n\r\n          <label htmlFor=\"timeSlot\">Time Slot:</label>\r\n          <select \r\n            id=\"timeSlot\" \r\n            name=\"timeSlot\" \r\n            value={bookingForm.timeSlot}\r\n            onChange={handleBookingChange}\r\n            required\r\n            disabled={loading || apiError || timeSlots.length === 0}\r\n          >\r\n            {loading && timeSlots.length === 0 ? (\r\n              <option value=\"\">Loading available slots...</option>\r\n            ) : timeSlots.length > 0 ? (\r\n              timeSlots.map(slot => (\r\n                <option \r\n                  key={slot.value} \r\n                  value={slot.value}\r\n                  disabled={slot.available === 0}\r\n                >\r\n                  {`${slot.label} (${slot.available} seats available)`}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option value=\"\">Select a date first</option>\r\n            )}\r\n          </select>\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"submit\" \r\n              id=\"bookSlotButton\" \r\n              className=\"booking-button\"\r\n              disabled={loading || apiError}\r\n            >\r\n              {loading ? 'Booking...' : 'Book Slot'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n\r\n      <section id=\"delete-booking\">\r\n        <h2>Delete Your Booked Slot</h2>\r\n        <form id=\"deleteBookingForm\">\r\n          <label htmlFor=\"deleteEmail\">Email (SRM):</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"deleteEmail\" \r\n            name=\"deleteEmail\" \r\n            value={deleteEmail}\r\n            onChange={handleDeleteEmailChange}\r\n            required \r\n            placeholder=\"youremail@srmist.edu.in\"\r\n            disabled={loading || apiError}\r\n            pattern=\".*@srmist\\.edu\\.in\"\r\n            title=\"Please use an email ending with @srmist.edu.in\"\r\n          />\r\n\r\n          <div className=\"button-container\">\r\n            <button \r\n              type=\"button\" \r\n              id=\"fetchSlotsButton\" \r\n              onClick={handleFetchBookedSlots}\r\n              disabled={loading || apiError || !deleteEmail}\r\n              className=\"action-button\"\r\n            >\r\n              {loading ? 'Fetching...' : 'Fetch Booked Slots'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div id=\"bookedSlotsContainer\" className={showBookedSlots ? '' : 'hidden'}>\r\n          <h3>Your Booked Slots</h3>\r\n          <ul id=\"bookedSlotsList\">\r\n            {bookedSlots.length === 0 ? (\r\n              <li>No slots booked.</li>\r\n            ) : (\r\n              bookedSlots.map(slot => (\r\n                <li key={slot.id}>\r\n                  Date: {slot.date}, Time Slot: {slot.time_slot}\r\n                  <button \r\n                    onClick={() => handleDeleteBookedSlot(slot.id)}\r\n                    disabled={loading || apiError}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SlotBooking; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}