{"ast":null,"code":"const API_BASE_URL = 'http://127.0.0.1:8080/api';\nexport const fetchAvailableSeats = async date => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/available-seats?date=${date}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch available seats. Please try again.');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching available seats:', error);\n    throw error;\n  }\n};\nexport const bookSlot = async bookingData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/book-slot`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bookingData)\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || 'Failed to book slot');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error booking slot:', error);\n    throw error;\n  }\n};\nexport const fetchBookedSlots = async email => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/booked-slots?email=${encodeURIComponent(email)}`);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to fetch booked slots');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error fetching booked slots:', error);\n    throw error;\n  }\n};\nexport const deleteBookedSlot = async bookingId => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/delete-slot/${bookingId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to delete slot');\n    }\n    return data;\n  } catch (error) {\n    console.error('Error deleting slot:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchAvailableSeats","date","response","fetch","ok","Error","json","error","console","bookSlot","bookingData","method","headers","body","JSON","stringify","data","message","fetchBookedSlots","email","encodeURIComponent","deleteBookedSlot","bookingId"],"sources":["C:/Users/91989/Desktop/KARTIK/random project/fswd/SRMLAB/react-version/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://127.0.0.1:8080/api';\r\n\r\nexport const fetchAvailableSeats = async (date) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/available-seats?date=${date}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch available seats. Please try again.');\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching available seats:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const bookSlot = async (bookingData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/book-slot`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(bookingData)\r\n    });\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Failed to book slot');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error booking slot:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchBookedSlots = async (email) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/booked-slots?email=${encodeURIComponent(email)}`\r\n    );\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Failed to fetch booked slots');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching booked slots:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteBookedSlot = async (bookingId) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/delete-slot/${bookingId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.error || 'Failed to delete slot');\r\n    }\r\n    \r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error deleting slot:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,yBAAyBE,IAAI,EAAE,CAAC;IAE5E,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;IACvE;IAEA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAOC,WAAW,IAAK;EAC7C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;MACxDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;IAClC,CAAC,CAAC;IAEF,MAAMM,IAAI,GAAG,MAAMd,QAAQ,CAACI,IAAI,CAAC,CAAC;IAElC,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACW,IAAI,CAACC,OAAO,IAAI,qBAAqB,CAAC;IACxD;IAEA,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,gBAAgB,GAAG,MAAOC,KAAK,IAAK;EAC/C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,YAAY,uBAAuBqB,kBAAkB,CAACD,KAAK,CAAC,EACjE,CAAC;IAED,MAAMH,IAAI,GAAG,MAAMd,QAAQ,CAACI,IAAI,CAAC,CAAC;IAElC,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACW,IAAI,CAACT,KAAK,IAAI,8BAA8B,CAAC;IAC/D;IAEA,OAAOS,IAAI;EACb,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMc,gBAAgB,GAAG,MAAOC,SAAS,IAAK;EACnD,IAAI;IACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,gBAAgBuB,SAAS,EAAE,EAAE;MACvEX,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMI,IAAI,GAAG,MAAMd,QAAQ,CAACI,IAAI,CAAC,CAAC;IAElC,IAAI,CAACJ,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAACW,IAAI,CAACT,KAAK,IAAI,uBAAuB,CAAC;IACxD;IAEA,OAAOS,IAAI;EACb,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}