{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth, API_BASE_URL, fetchPendingBookings, handleBookingAction, fetchDayOrder } from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlot: ''\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedUserEmail, setSelectedUserEmail] = useState(null);\n  const [userBookingHistory, setUserBookingHistory] = useState([]);\n  const [loadingHistory, setLoadingHistory] = useState(false);\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    const initializeUser = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n\n          // Set form data from user details\n          setBookingForm(prev => {\n            var _user$user_metadata, _user$user_metadata2, _user$user_metadata3;\n            return {\n              ...prev,\n              facultyId: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.registration_number) || '',\n              name: ((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.full_name) || '',\n              email: user.email || '',\n              department: ((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.department) || ''\n            };\n          });\n\n          // Check if user is admin\n          const adminStatus = isAdminUser(user.email);\n          setIsAdmin(adminStatus);\n\n          // Fetch user's booked slots\n          fetchUserBookings(user.email);\n\n          // If admin, fetch pending bookings\n          if (adminStatus) {\n            fetchPendingBookingsData();\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    checkServerHealth();\n    initializeUser();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n\n  // Function to check if a user is admin\n  const isAdminUser = email => {\n    const adminEmails = ['km5260@srmist.edu.in', 'manorant@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = date => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n\n  // Function to provide a descriptive date string\n  const formatDateForDisplay = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Update form state immediately for all fields\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Handle date changes\n    if (name === 'date' && value) {\n      try {\n        setLoading(true);\n        // Get day order for selected date\n        const response = await fetch(`${API_BASE_URL}/day-order?date=${encodeURIComponent(value)}`);\n        const data = await response.json();\n        if (response.ok && data.day_order) {\n          setBookingForm(prev => ({\n            ...prev,\n            date: value,\n            dayOrder: data.day_order.toString()\n          }));\n\n          // If lab is selected, fetch available seats\n          if (bookingForm.lab) {\n            handleFetchAvailableSeats(value, bookingForm.lab);\n          }\n        } else {\n          setError('Selected date is a weekend. Please choose a weekday.');\n          setBookingForm(prev => ({\n            ...prev,\n            dayOrder: ''\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching day order:', error);\n        setError('Error fetching day order. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    // Handle lab selection\n    if (name === 'lab' && value && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date, value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab) {\n      setTimeSlots([]);\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab);\n      console.log('Available slots response:', data);\n\n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [{\n        value: \"08:00-08:50\",\n        label: \"8:00 AM - 8:50 AM\",\n        available: data[\"08:00-08:50\"] === true\n      }, {\n        value: \"08:50-09:40\",\n        label: \"8:50 AM - 9:40 AM\",\n        available: data[\"08:50-09:40\"] === true\n      }, {\n        value: \"09:45-10:35\",\n        label: \"9:45 AM - 10:35 AM\",\n        available: data[\"09:45-10:35\"] === true\n      }, {\n        value: \"10:40-11:30\",\n        label: \"10:40 AM - 11:30 AM\",\n        available: data[\"10:40-11:30\"] === true\n      }, {\n        value: \"11:35-12:25\",\n        label: \"11:35 AM - 12:25 PM\",\n        available: data[\"11:35-12:25\"] === true\n      }, {\n        value: \"12:30-01:20\",\n        label: \"12:30 PM - 1:20 PM\",\n        available: data[\"12:30-01:20\"] === true\n      }, {\n        value: \"01:25-02:15\",\n        label: \"1:25 PM - 2:15 PM\",\n        available: data[\"01:25-02:15\"] === true\n      }, {\n        value: \"02:20-03:10\",\n        label: \"2:20 PM - 3:10 PM\",\n        available: data[\"02:20-03:10\"] === true\n      }, {\n        value: \"03:10-04:00\",\n        label: \"3:10 PM - 4:00 PM\",\n        available: data[\"03:10-04:00\"] === true\n      }, {\n        value: \"04:00-04:50\",\n        label: \"4:00 PM - 4:50 PM\",\n        available: data[\"04:00-04:50\"] === true\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Validate form inputs\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n\n      // Refresh the bookings after successful booking\n      fetchUserBookings(bookingForm.email);\n\n      // Reset form only on successful booking\n      setBookingForm({\n        facultyId: '',\n        name: '',\n        email: bookingForm.email,\n        // Keep the email\n        department: '',\n        date: '',\n        dayOrder: '',\n        lab: '',\n        timeSlot: ''\n      });\n\n      // Clear time slots\n      setTimeSlots([]);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async email => {\n    if (!email || !email.toLowerCase().endsWith('@srmist.edu.in')) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await fetchBookedSlots(email);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for your email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        console.error('Error fetching bookings:', error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n\n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n    try {\n      var _user$user_metadata4, _user$user_metadata5, _user$user_metadata6;\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          facultyId: ((_user$user_metadata4 = user.user_metadata) === null || _user$user_metadata4 === void 0 ? void 0 : _user$user_metadata4.registration_number) || user.email,\n          name: ((_user$user_metadata5 = user.user_metadata) === null || _user$user_metadata5 === void 0 ? void 0 : _user$user_metadata5.full_name) || user.email,\n          department: ((_user$user_metadata6 = user.user_metadata) === null || _user$user_metadata6 === void 0 ? void 0 : _user$user_metadata6.department) || 'Not specified'\n        })\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        console.error('Non-JSON response:', await response.text());\n        throw new Error('Backend server error. Please make sure the server is running.');\n      }\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Error booking slot.');\n        return;\n      }\n      setSuccess(data.message);\n\n      // Reset selections after successful booking\n      setSelectedSlot(null);\n      // Refresh the bookings list\n      fetchUserBookings(user.email);\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      if (!(user !== null && user !== void 0 && user.email)) return;\n      const response = await fetch(`${API_BASE_URL}/admin/pending-bookings?admin_email=${encodeURIComponent(user.email)}`);\n      if (!response.ok) throw new Error('Failed to fetch pending bookings');\n      const data = await response.json();\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError('Failed to fetch pending bookings');\n    }\n  };\n\n  // Function to fetch user's booking history\n  const fetchUserBookingHistory = async email => {\n    if (!email) return;\n    setLoadingHistory(true);\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('bookings').select('*').eq('email', email).order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      setUserBookingHistory(data || []);\n    } catch (error) {\n      console.error('Error fetching user booking history:', error);\n      setError('Failed to fetch user booking history');\n    } finally {\n      setLoadingHistory(false);\n    }\n  };\n\n  // Function to view user's booking history\n  const handleViewUserHistory = email => {\n    setSelectedUserEmail(email);\n    fetchUserBookingHistory(email);\n  };\n\n  // Function to handle booking status change (confirm/reject)\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      if (!(user !== null && user !== void 0 && user.email)) return;\n      const response = await fetch(`${API_BASE_URL}/admin/booking/${bookingId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          admin_email: user.email,\n          action: action\n        })\n      });\n      if (!response.ok) throw new Error(`Failed to ${action} booking`);\n\n      // Refresh pending bookings list\n      await fetchPendingBookingsData();\n      setSuccess(`Booking ${action}ed successfully`);\n    } catch (error) {\n      console.error(`Error ${action}ing booking:`, error);\n      setError(`Failed to ${action} booking`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lab Slot Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleBookingSubmit,\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"facultyId\",\n        children: \"Faculty ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"facultyId\",\n        name: \"facultyId\",\n        value: bookingForm.facultyId,\n        onChange: handleBookingChange,\n        required: true,\n        placeholder: \"Enter your faculty ID\",\n        disabled: loading || apiError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: bookingForm.name,\n        onChange: handleBookingChange,\n        required: true,\n        placeholder: \"Enter your full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email (SRM):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: bookingForm.email,\n        readOnly: true,\n        disabled: true,\n        className: \"readonly-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"department\",\n        children: \"Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"department\",\n        name: \"department\",\n        value: bookingForm.department,\n        onChange: handleBookingChange,\n        required: true,\n        disabled: loading || apiError,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NETWORKING\",\n          children: \"Networking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CINTEL\",\n          children: \"CINTEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DSBS\",\n          children: \"DSBS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CTECH\",\n          children: \"CTECH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dayOrder\",\n          children: \"Day Order:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"dayOrder\",\n          name: \"dayOrder\",\n          value: bookingForm.dayOrder ? `Day ${bookingForm.dayOrder}` : '',\n          readOnly: true,\n          className: \"readonly-input\",\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            border: '1px solid #ddd'\n          },\n          placeholder: \"Select a date to see day order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lab\",\n        children: \"Select Lab:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"lab\",\n        name: \"lab\",\n        value: bookingForm.lab,\n        onChange: handleBookingChange,\n        required: true,\n        disabled: loading || apiError,\n        className: \"lab-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Lab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB A\",\n          children: \"LAB A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB B\",\n          children: \"LAB B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB C\",\n          children: \"LAB C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB D\",\n          children: \"LAB D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeSlot\",\n        children: \"Time Slot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"timeSlot\",\n        name: \"timeSlot\",\n        value: bookingForm.timeSlot,\n        onChange: handleBookingChange,\n        required: true,\n        disabled: loading || apiError || timeSlots.length === 0,\n        className: \"time-slot-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Loading available slots...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: slot.value,\n          disabled: !slot.available,\n          className: !slot.available ? 'slot-full' : '',\n          children: `${slot.label} (${slot.available ? 'Available' : 'Booked'})`\n        }, slot.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a date first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"bookSlotButton\",\n          className: \"booking-button\",\n          disabled: loading || apiError,\n          children: loading ? 'Booking...' : 'Book Slot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 9\n    }, this), showBookedSlots && bookedSlots.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booked-slots-list\",\n      children: bookedSlots.map(booking => {\n        var _booking$status, _booking$status2, _booking$status3;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booked-slot-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booked-slot-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 20\n              }, this), \" \", booking.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time Slot:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 20\n              }, this), \" \", booking.time_slot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Day Order:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 20\n              }, this), \" \", booking.day_order]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 20\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-${((_booking$status = booking.status) === null || _booking$status === void 0 ? void 0 : _booking$status.toLowerCase()) || 'waiting'}`,\n                children: ((_booking$status2 = booking.status) === null || _booking$status2 === void 0 ? void 0 : _booking$status2.charAt(0).toUpperCase()) + ((_booking$status3 = booking.status) === null || _booking$status3 === void 0 ? void 0 : _booking$status3.slice(1)) || 'Waiting'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this), booking.status === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteBookedSlot(booking.id),\n            className: \"delete-button\",\n            disabled: loading,\n            children: \"Cancel Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 17\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }, this), isAdmin && pendingBookings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pending Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pending-bookings-list\",\n        children: pendingBookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pending-booking-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 22\n              }, this), \" \", booking.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 22\n              }, this), \" \", booking.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 22\n              }, this), \" \", booking.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time Slot:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 22\n              }, this), \" \", booking.time_slot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookingStatusChange(booking.id, 'confirm'),\n              className: \"confirm-button\",\n              disabled: loading,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookingStatusChange(booking.id, 'reject'),\n              className: \"reject-button\",\n              disabled: loading,\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewUserHistory(booking.email),\n              className: \"history-button\",\n              disabled: loadingHistory,\n              children: selectedUserEmail === booking.email ? 'Hide History' : 'View History'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 17\n          }, this), selectedUserEmail === booking.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-booking-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Booking History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 21\n            }, this), loadingHistory ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading history...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 23\n            }, this) : userBookingHistory.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"history-list\",\n              children: userBookingHistory.map(historyItem => {\n                var _historyItem$status, _historyItem$status2, _historyItem$status3;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"history-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Date:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 32\n                    }, this), \" \", historyItem.date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 730,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Time:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 32\n                    }, this), \" \", historyItem.time_slot]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 32\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `status-${((_historyItem$status = historyItem.status) === null || _historyItem$status === void 0 ? void 0 : _historyItem$status.toLowerCase()) || 'pending'}`,\n                      children: ((_historyItem$status2 = historyItem.status) === null || _historyItem$status2 === void 0 ? void 0 : _historyItem$status2.charAt(0).toUpperCase()) + ((_historyItem$status3 = historyItem.status) === null || _historyItem$status3 === void 0 ? void 0 : _historyItem$status3.slice(1)) || 'Pending'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 29\n                  }, this)]\n                }, historyItem.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No previous bookings found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 19\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"tGXN6MPlPZITmyqyfZDvIzKrmJE=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","API_BASE_URL","fetchPendingBookings","handleBookingAction","fetchDayOrder","supabase","TimeSlots","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","facultyId","name","email","department","date","dayOrder","lab","timeSlot","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","message","setMessage","isAdmin","setIsAdmin","pendingBookings","setPendingBookings","user","setUser","selectedUserEmail","setSelectedUserEmail","userBookingHistory","setUserBookingHistory","loadingHistory","setLoadingHistory","checkServerHealth","isHealthy","initializeUser","data","auth","getUser","prev","_user$user_metadata","_user$user_metadata2","_user$user_metadata3","user_metadata","registration_number","full_name","adminStatus","isAdminUser","fetchUserBookings","fetchPendingBookingsData","console","today","Date","toISOString","split","dateInput","document","getElementById","setAttribute","adminEmails","includes","isWeekend","day","getDay","formatDateForDisplay","dateString","isWeekendDay","formattedDate","toLocaleDateString","weekday","year","month","handleBookingChange","e","value","target","response","fetch","encodeURIComponent","json","ok","day_order","toString","handleFetchAvailableSeats","handleRetryConnection","selectedLab","log","availableTimeSlots","label","available","handleBookingSubmit","preventDefault","toLowerCase","endsWith","length","handleDeleteBookedSlot","bookingId","window","confirm","handleSlotSelect","slot","handleBooking","_user$user_metadata4","_user$user_metadata5","_user$user_metadata6","method","headers","body","JSON","stringify","contentType","get","text","Error","fetchUserBookingHistory","from","select","eq","order","ascending","handleViewUserHistory","handleBookingStatusChange","action","admin_email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","placeholder","disabled","readOnly","style","backgroundColor","padding","border","map","onClick","booking","_booking$status","_booking$status2","_booking$status3","time_slot","status","charAt","toUpperCase","slice","historyItem","_historyItem$status","_historyItem$status2","_historyItem$status3","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  fetchAvailableSeats, \n  bookSlot, \n  fetchBookedSlots, \n  deleteBookedSlot, \n  checkApiHealth, \n  API_BASE_URL,\n  fetchPendingBookings,\n  handleBookingAction,\n  fetchDayOrder\n} from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\n\nconst SlotBooking = () => {\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlot: ''\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedUserEmail, setSelectedUserEmail] = useState(null);\n  const [userBookingHistory, setUserBookingHistory] = useState([]);\n  const [loadingHistory, setLoadingHistory] = useState(false);\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    \n    const initializeUser = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n          \n          // Set form data from user details\n          setBookingForm(prev => ({\n            ...prev,\n            facultyId: user.user_metadata?.registration_number || '',\n            name: user.user_metadata?.full_name || '',\n            email: user.email || '',\n            department: user.user_metadata?.department || ''\n          }));\n          \n          // Check if user is admin\n          const adminStatus = isAdminUser(user.email);\n          setIsAdmin(adminStatus);\n          \n          // Fetch user's booked slots\n          fetchUserBookings(user.email);\n          \n          // If admin, fetch pending bookings\n          if (adminStatus) {\n            fetchPendingBookingsData();\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    \n    checkServerHealth();\n    initializeUser();\n    \n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n  \n  // Function to check if a user is admin\n  const isAdminUser = (email) => {\n    const adminEmails = ['km5260@srmist.edu.in', 'manorant@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = (date) => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n  \n  // Function to provide a descriptive date string\n  const formatDateForDisplay = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    \n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async (e) => {\n    const { name, value } = e.target;\n    \n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n    \n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Update form state immediately for all fields\n    setBookingForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Handle date changes\n    if (name === 'date' && value) {\n      try {\n        setLoading(true);\n        // Get day order for selected date\n        const response = await fetch(`${API_BASE_URL}/day-order?date=${encodeURIComponent(value)}`);\n        const data = await response.json();\n        \n        if (response.ok && data.day_order) {\n          setBookingForm(prev => ({\n            ...prev,\n            date: value,\n            dayOrder: data.day_order.toString()\n          }));\n\n          // If lab is selected, fetch available seats\n          if (bookingForm.lab) {\n            handleFetchAvailableSeats(value, bookingForm.lab);\n          }\n        } else {\n          setError('Selected date is a weekend. Please choose a weekday.');\n          setBookingForm(prev => ({\n            ...prev,\n            dayOrder: ''\n          }));\n        }\n      } catch (error) {\n        console.error('Error fetching day order:', error);\n        setError('Error fetching day order. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    // Handle lab selection\n    if (name === 'lab' && value && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date, value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    \n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab) {\n      setTimeSlots([]);\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    \n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab);\n      console.log('Available slots response:', data);\n      \n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [\n        { value: \"08:00-08:50\", label: \"8:00 AM - 8:50 AM\", available: data[\"08:00-08:50\"] === true },\n        { value: \"08:50-09:40\", label: \"8:50 AM - 9:40 AM\", available: data[\"08:50-09:40\"] === true },\n        { value: \"09:45-10:35\", label: \"9:45 AM - 10:35 AM\", available: data[\"09:45-10:35\"] === true },\n        { value: \"10:40-11:30\", label: \"10:40 AM - 11:30 AM\", available: data[\"10:40-11:30\"] === true },\n        { value: \"11:35-12:25\", label: \"11:35 AM - 12:25 PM\", available: data[\"11:35-12:25\"] === true },\n        { value: \"12:30-01:20\", label: \"12:30 PM - 1:20 PM\", available: data[\"12:30-01:20\"] === true },\n        { value: \"01:25-02:15\", label: \"1:25 PM - 2:15 PM\", available: data[\"01:25-02:15\"] === true },\n        { value: \"02:20-03:10\", label: \"2:20 PM - 3:10 PM\", available: data[\"02:20-03:10\"] === true },\n        { value: \"03:10-04:00\", label: \"3:10 PM - 4:00 PM\", available: data[\"03:10-04:00\"] === true },\n        { value: \"04:00-04:50\", label: \"4:00 PM - 4:50 PM\", available: data[\"04:00-04:50\"] === true }\n      ];\n      \n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Clear previous messages\n    setError('');\n    setSuccess('');\n    \n    // Validate form inputs\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n      \n      // Refresh the bookings after successful booking\n      fetchUserBookings(bookingForm.email);\n      \n      // Reset form only on successful booking\n      setBookingForm({\n        facultyId: '',\n        name: '',\n        email: bookingForm.email, // Keep the email\n        department: '',\n        date: '',\n        dayOrder: '',\n        lab: '',\n        timeSlot: ''\n      });\n      \n      // Clear time slots\n      setTimeSlots([]);\n      \n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async (email) => {\n    if (!email || !email.toLowerCase().endsWith('@srmist.edu.in')) {\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const data = await fetchBookedSlots(email);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      \n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for your email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        console.error('Error fetching bookings:', error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async (bookingId) => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    \n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n      \n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n      \n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n      \n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          facultyId: user.user_metadata?.registration_number || user.email,\n          name: user.user_metadata?.full_name || user.email,\n          department: user.user_metadata?.department || 'Not specified'\n        }),\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        console.error('Non-JSON response:', await response.text());\n        throw new Error('Backend server error. Please make sure the server is running.');\n      }\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        setError(data.message || 'Error booking slot.');\n        return;\n      }\n      \n      setSuccess(data.message);\n      \n      // Reset selections after successful booking\n      setSelectedSlot(null);\n      // Refresh the bookings list\n      fetchUserBookings(user.email);\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      if (!user?.email) return;\n      \n      const response = await fetch(`${API_BASE_URL}/admin/pending-bookings?admin_email=${encodeURIComponent(user.email)}`);\n      if (!response.ok) throw new Error('Failed to fetch pending bookings');\n      \n      const data = await response.json();\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError('Failed to fetch pending bookings');\n    }\n  };\n\n  // Function to fetch user's booking history\n  const fetchUserBookingHistory = async (email) => {\n    if (!email) return;\n    \n    setLoadingHistory(true);\n    try {\n      const { data, error } = await supabase\n        .from('bookings')\n        .select('*')\n        .eq('email', email)\n        .order('created_at', { ascending: false });\n        \n      if (error) throw error;\n      \n      setUserBookingHistory(data || []);\n    } catch (error) {\n      console.error('Error fetching user booking history:', error);\n      setError('Failed to fetch user booking history');\n    } finally {\n      setLoadingHistory(false);\n    }\n  };\n\n  // Function to view user's booking history\n  const handleViewUserHistory = (email) => {\n    setSelectedUserEmail(email);\n    fetchUserBookingHistory(email);\n  };\n\n  // Function to handle booking status change (confirm/reject)\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      if (!user?.email) return;\n\n      const response = await fetch(`${API_BASE_URL}/admin/booking/${bookingId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          admin_email: user.email,\n          action: action\n        })\n      });\n\n      if (!response.ok) throw new Error(`Failed to ${action} booking`);\n\n      // Refresh pending bookings list\n      await fetchPendingBookingsData();\n      setSuccess(`Booking ${action}ed successfully`);\n    } catch (error) {\n      console.error(`Error ${action}ing booking:`, error);\n      setError(`Failed to ${action} booking`);\n    }\n  };\n\n  return (\n    <div className=\"slot-booking-container\">\n      <h2>Lab Slot Booking</h2>\n      \n      <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n        <label htmlFor=\"facultyId\">Faculty ID:</label>\n        <input \n          type=\"text\" \n          id=\"facultyId\" \n          name=\"facultyId\" \n          value={bookingForm.facultyId}\n          onChange={handleBookingChange}\n          required \n          placeholder=\"Enter your faculty ID\"\n          disabled={loading || apiError}\n        />\n\n        <label htmlFor=\"name\">Full Name:</label>\n        <input \n          type=\"text\" \n          id=\"name\" \n          name=\"name\" \n          value={bookingForm.name}\n          onChange={handleBookingChange}\n          required\n          placeholder=\"Enter your full name\"\n        />\n\n        <label htmlFor=\"email\">Email (SRM):</label>\n        <input \n          type=\"email\" \n          id=\"email\" \n          name=\"email\" \n          value={bookingForm.email}\n          readOnly\n          disabled\n          className=\"readonly-input\"\n        />\n\n        <label htmlFor=\"department\">Department:</label>\n        <select \n          id=\"department\" \n          name=\"department\" \n          value={bookingForm.department}\n          onChange={handleBookingChange}\n          required\n          disabled={loading || apiError}\n        >\n          <option value=\"\">Select Department</option>\n          <option value=\"NETWORKING\">Networking</option>\n          <option value=\"CINTEL\">CINTEL</option>\n          <option value=\"DSBS\">DSBS</option>\n          <option value=\"CTECH\">CTECH</option>\n        </select>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"date\">Date:</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            value={bookingForm.date}\n            onChange={handleBookingChange}\n            required\n            disabled={loading || apiError}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"dayOrder\">Day Order:</label>\n          <input\n            type=\"text\"\n            id=\"dayOrder\"\n            name=\"dayOrder\"\n            value={bookingForm.dayOrder ? `Day ${bookingForm.dayOrder}` : ''}\n            readOnly\n            className=\"readonly-input\"\n            style={{ backgroundColor: '#f5f5f5', padding: '8px', border: '1px solid #ddd' }}\n            placeholder=\"Select a date to see day order\"\n          />\n        </div>\n\n        <label htmlFor=\"lab\">Select Lab:</label>\n        <select \n          id=\"lab\" \n          name=\"lab\" \n          value={bookingForm.lab}\n          onChange={handleBookingChange}\n          required\n          disabled={loading || apiError}\n          className=\"lab-select\"\n        >\n          <option value=\"\">Select a Lab</option>\n          <option value=\"LAB A\">LAB A</option>\n          <option value=\"LAB B\">LAB B</option>\n          <option value=\"LAB C\">LAB C</option>\n          <option value=\"LAB D\">LAB D</option>\n        </select>\n\n        <label htmlFor=\"timeSlot\">Time Slot:</label>\n        <select \n          id=\"timeSlot\" \n          name=\"timeSlot\" \n          value={bookingForm.timeSlot}\n          onChange={handleBookingChange}\n          required\n          disabled={loading || apiError || timeSlots.length === 0}\n          className=\"time-slot-select\"\n        >\n          <option value=\"\">Select a slot</option>\n          {loading && timeSlots.length === 0 ? (\n            <option value=\"\">Loading available slots...</option>\n          ) : timeSlots.length > 0 ? (\n            timeSlots.map(slot => (\n              <option \n                key={slot.value} \n                value={slot.value}\n                disabled={!slot.available}\n                className={!slot.available ? 'slot-full' : ''}\n              >\n                {`${slot.label} (${slot.available ? 'Available' : 'Booked'})`}\n              </option>\n            ))\n          ) : (\n            <option value=\"\">Select a date first</option>\n          )}\n        </select>\n\n        <div className=\"button-container\">\n          <button \n            type=\"submit\" \n            id=\"bookSlotButton\" \n            className=\"booking-button\"\n            disabled={loading || apiError}\n          >\n            {loading ? 'Booking...' : 'Book Slot'}\n          </button>\n        </div>\n      </form>\n\n      {apiError && (\n        <div className=\"api-error\">\n          <h3>Connection Error</h3>\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\n          <button \n            onClick={handleRetryConnection} \n            disabled={loading}\n            className=\"action-button\"\n          >\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\n          </button>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-message\">\n          {success}\n        </div>\n      )}\n      \n      {message && (\n        <div className={`message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n\n      {showBookedSlots && bookedSlots.length > 0 && (\n        <div className=\"booked-slots-list\">\n          {bookedSlots.map(booking => (\n            <div key={booking.id} className=\"booked-slot-item\">\n              <div className=\"booked-slot-details\">\n                <p><strong>Date:</strong> {booking.date}</p>\n                <p><strong>Time Slot:</strong> {booking.time_slot}</p>\n                <p><strong>Day Order:</strong> {booking.day_order}</p>\n                <p><strong>Status:</strong> <span className={`status-${booking.status?.toLowerCase() || 'waiting'}`}>\n                  {booking.status?.charAt(0).toUpperCase() + booking.status?.slice(1) || 'Waiting'}\n                </span></p>\n              </div>\n              {booking.status === 'waiting' && (\n                <button\n                  onClick={() => handleDeleteBookedSlot(booking.id)}\n                  className=\"delete-button\"\n                  disabled={loading}\n                >\n                  Cancel Booking\n                </button>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Admin section for pending bookings */}\n      {isAdmin && pendingBookings.length > 0 && (\n        <div className=\"admin-section\">\n          <h3>Pending Bookings</h3>\n          <div className=\"pending-bookings-list\">\n            {pendingBookings.map(booking => (\n              <div key={booking.id} className=\"pending-booking-item\">\n                <div className=\"booking-info\">\n                  <p><strong>Name:</strong> {booking.name}</p>\n                  <p><strong>Email:</strong> {booking.email}</p>\n                  <p><strong>Date:</strong> {booking.date}</p>\n                  <p><strong>Time Slot:</strong> {booking.time_slot}</p>\n                </div>\n                <div className=\"booking-actions\">\n                  <button \n                    onClick={() => handleBookingStatusChange(booking.id, 'confirm')}\n                    className=\"confirm-button\"\n                    disabled={loading}\n                  >\n                    Confirm\n                  </button>\n                  <button \n                    onClick={() => handleBookingStatusChange(booking.id, 'reject')}\n                    className=\"reject-button\"\n                    disabled={loading}\n                  >\n                    Reject\n                  </button>\n                  <button \n                    onClick={() => handleViewUserHistory(booking.email)}\n                    className=\"history-button\"\n                    disabled={loadingHistory}\n                  >\n                    {selectedUserEmail === booking.email ? 'Hide History' : 'View History'}\n                  </button>\n                </div>\n                \n                {selectedUserEmail === booking.email && (\n                  <div className=\"user-booking-history\">\n                    <h4>Booking History</h4>\n                    {loadingHistory ? (\n                      <p>Loading history...</p>\n                    ) : userBookingHistory.length > 0 ? (\n                      <div className=\"history-list\">\n                        {userBookingHistory.map(historyItem => (\n                          <div key={historyItem.id} className=\"history-item\">\n                            <p><strong>Date:</strong> {historyItem.date}</p>\n                            <p><strong>Time:</strong> {historyItem.time_slot}</p>\n                            <p><strong>Status:</strong> \n                              <span className={`status-${historyItem.status?.toLowerCase() || 'pending'}`}>\n                                {historyItem.status?.charAt(0).toUpperCase() + historyItem.status?.slice(1) || 'Pending'}\n                              </span>\n                            </p>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <p>No previous bookings found.</p>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SlotBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}