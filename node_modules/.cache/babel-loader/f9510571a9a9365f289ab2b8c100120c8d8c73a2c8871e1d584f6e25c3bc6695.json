{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth, API_BASE_URL, fetchPendingBookings, handleBookingAction, fetchDayOrder } from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport AdminDayOrder from '../components/AdminDayOrder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlot: ''\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    const initializeUser = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n          const userIsAdmin = isAdminUser(user.email);\n          setIsAdmin(userIsAdmin);\n          setBookingForm(prev => {\n            var _user$user_metadata;\n            return {\n              ...prev,\n              email: user.email,\n              name: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.full_name) || user.email\n            };\n          });\n          if (user.email) {\n            await fetchUserBookings(user.email);\n            if (userIsAdmin) {\n              await fetchPendingBookingsData();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    checkServerHealth();\n    initializeUser();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n\n  // Function to check if a user is admin\n  const isAdminUser = email => {\n    const adminEmails = ['km5260@srmist.edu.in', 'manorant@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = date => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n\n  // Function to provide a descriptive date string\n  const formatDateForDisplay = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Handle date changes\n    if (name === 'date' && value) {\n      // Update form with the date immediately\n      setBookingForm(prev => ({\n        ...prev,\n        date: value,\n        dayOrder: '' // Clear day order while fetching\n      }));\n      if (isWeekend(value)) {\n        setError(\"Weekends (Saturday and Sunday) are not available for booking.\");\n        setBookingForm(prev => ({\n          ...prev,\n          date: '',\n          dayOrder: ''\n        }));\n        return;\n      }\n      try {\n        // Get day order for selected date\n        const response = await fetch(`${API_BASE_URL}/day-order?date=${encodeURIComponent(value)}`);\n        const data = await response.json();\n        if (response.ok && data.day_order) {\n          console.log('Fetched day order:', data.day_order); // Debug log\n          setBookingForm(prev => ({\n            ...prev,\n            date: value,\n            dayOrder: data.day_order.toString()\n          }));\n        } else {\n          console.error('Day order response:', data); // Debug log\n          setError(data.error || \"Could not fetch day order for the selected date.\");\n        }\n\n        // If lab is selected, fetch available seats\n        if (bookingForm.lab) {\n          handleFetchAvailableSeats(value, bookingForm.lab);\n        }\n      } catch (error) {\n        console.error('Error fetching day order:', error);\n        setError(error.message);\n      }\n    } else {\n      // Update other form fields normally\n      setBookingForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n\n    // Handle lab selection\n    if (name === 'lab' && value && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date, value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab) {\n      setTimeSlots([]);\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab);\n      console.log('Available slots response:', data);\n\n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [{\n        value: \"08:00-08:50\",\n        label: \"8:00 AM - 8:50 AM\",\n        available: data[\"08:00-08:50\"] === true\n      }, {\n        value: \"08:50-09:40\",\n        label: \"8:50 AM - 9:40 AM\",\n        available: data[\"08:50-09:40\"] === true\n      }, {\n        value: \"09:45-10:35\",\n        label: \"9:45 AM - 10:35 AM\",\n        available: data[\"09:45-10:35\"] === true\n      }, {\n        value: \"10:40-11:30\",\n        label: \"10:40 AM - 11:30 AM\",\n        available: data[\"10:40-11:30\"] === true\n      }, {\n        value: \"11:35-12:25\",\n        label: \"11:35 AM - 12:25 PM\",\n        available: data[\"11:35-12:25\"] === true\n      }, {\n        value: \"12:30-01:20\",\n        label: \"12:30 PM - 1:20 PM\",\n        available: data[\"12:30-01:20\"] === true\n      }, {\n        value: \"01:25-02:15\",\n        label: \"1:25 PM - 2:15 PM\",\n        available: data[\"01:25-02:15\"] === true\n      }, {\n        value: \"02:20-03:10\",\n        label: \"2:20 PM - 3:10 PM\",\n        available: data[\"02:20-03:10\"] === true\n      }, {\n        value: \"03:10-04:00\",\n        label: \"3:10 PM - 4:00 PM\",\n        available: data[\"03:10-04:00\"] === true\n      }, {\n        value: \"04:00-04:50\",\n        label: \"4:00 PM - 4:50 PM\",\n        available: data[\"04:00-04:50\"] === true\n      }];\n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Validate form inputs\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n\n      // Refresh the bookings after successful booking\n      fetchUserBookings(bookingForm.email);\n\n      // Reset form only on successful booking\n      setBookingForm({\n        facultyId: '',\n        name: '',\n        email: bookingForm.email,\n        // Keep the email\n        department: '',\n        date: '',\n        dayOrder: '',\n        lab: '',\n        timeSlot: ''\n      });\n\n      // Clear time slots\n      setTimeSlots([]);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async email => {\n    if (!email || !email.toLowerCase().endsWith('@srmist.edu.in')) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const data = await fetchBookedSlots(email);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for your email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        console.error('Error fetching bookings:', error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n\n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n    try {\n      var _user$user_metadata2, _user$user_metadata3, _user$user_metadata4;\n      setLoading(true);\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          facultyId: ((_user$user_metadata2 = user.user_metadata) === null || _user$user_metadata2 === void 0 ? void 0 : _user$user_metadata2.registration_number) || user.email,\n          name: ((_user$user_metadata3 = user.user_metadata) === null || _user$user_metadata3 === void 0 ? void 0 : _user$user_metadata3.full_name) || user.email,\n          department: ((_user$user_metadata4 = user.user_metadata) === null || _user$user_metadata4 === void 0 ? void 0 : _user$user_metadata4.department) || 'Not specified'\n        })\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        console.error('Non-JSON response:', await response.text());\n        throw new Error('Backend server error. Please make sure the server is running.');\n      }\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Error booking slot.');\n        return;\n      }\n      setSuccess(data.message);\n\n      // Reset selections after successful booking\n      setSelectedSlot(null);\n      // Refresh the bookings list\n      fetchUserBookings(user.email);\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      setLoading(true);\n      const data = await fetchPendingBookings('km5260@srmist.edu.in');\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to handle booking confirmation/rejection\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      setLoading(true);\n      const data = await handleBookingAction(bookingId, action, 'km5260@srmist.edu.in');\n      setSuccess(data.message);\n\n      // Refresh both pending bookings and available slots\n      await fetchPendingBookingsData();\n      if (bookingForm.date && bookingForm.lab) {\n        await handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n      // Refresh user bookings if the current user has any\n      if (bookingForm.email) {\n        await fetchUserBookings(bookingForm.email);\n      }\n    } catch (error) {\n      console.error('Error updating booking status:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"pending-bookings\",\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pending Bookings (Admin)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this), pendingBookings.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pending-bookings-list\",\n        children: pendingBookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pending-booking-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 24\n              }, this), \" \", booking.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 24\n              }, this), \" \", booking.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Department:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 24\n              }, this), \" \", booking.department]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 24\n              }, this), \" \", booking.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 24\n              }, this), \" \", booking.time_slot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Lab:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 24\n              }, this), \" \", booking.lab]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Day Order:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 24\n              }, this), \" \", booking.day_order]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookingStatusChange(booking.id, 'confirm'),\n              className: \"confirm-button\",\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookingStatusChange(booking.id, 'reject'),\n              className: \"reject-button\",\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 19\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No pending bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this), user && isAdminUser(user.email) && /*#__PURE__*/_jsxDEV(AdminDayOrder, {\n      adminEmail: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"lab-booking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Book Your Lab Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBookingSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"facultyId\",\n          children: \"Faculty ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"facultyId\",\n          name: \"facultyId\",\n          value: bookingForm.facultyId,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"Enter your faculty ID\",\n          disabled: loading || apiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: bookingForm.name,\n          onChange: handleBookingChange,\n          required: true,\n          placeholder: \"Enter your full name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email (SRM):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: bookingForm.email,\n          readOnly: true,\n          disabled: true,\n          className: \"readonly-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"department\",\n          children: \"Department:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"department\",\n          name: \"department\",\n          value: bookingForm.department,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"NETWORKING\",\n            children: \"Networking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CINTEL\",\n            children: \"CINTEL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DSBS\",\n            children: \"DSBS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"CTECH\",\n            children: \"CTECH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            value: bookingForm.date,\n            onChange: handleBookingChange,\n            required: true,\n            disabled: loading || apiError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dayOrder\",\n            children: \"Day Order:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"dayOrder\",\n            name: \"dayOrder\",\n            value: bookingForm.dayOrder ? `Day ${bookingForm.dayOrder}` : '',\n            readOnly: true,\n            className: \"readonly-input\",\n            placeholder: \"Select a date to see day order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lab\",\n          children: \"Select Lab:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"lab\",\n          name: \"lab\",\n          value: bookingForm.lab,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          className: \"lab-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a Lab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LAB A\",\n            children: \"LAB A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LAB B\",\n            children: \"LAB B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LAB C\",\n            children: \"LAB C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LAB D\",\n            children: \"LAB D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"timeSlot\",\n          children: \"Time Slot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"timeSlot\",\n          name: \"timeSlot\",\n          value: bookingForm.timeSlot,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError || timeSlots.length === 0,\n          className: \"time-slot-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this), loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Loading available slots...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: slot.value,\n            disabled: !slot.available,\n            className: !slot.available ? 'slot-full' : '',\n            children: `${slot.label} (${slot.available ? 'Available' : 'Booked'})`\n          }, slot.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a date first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"bookSlotButton\",\n            className: \"booking-button\",\n            disabled: loading || apiError,\n            children: loading ? 'Booking...' : 'Book Slot'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"user-bookings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Booked Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading your bookings...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 21\n      }, this), bookedSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booked-slots-list\",\n        children: bookedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booked-slot-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booked-slot-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 19\n            }, this), \" \", slot.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 19\n            }, this), \" \", slot.time_slot, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Lab:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 19\n            }, this), \" \", slot.lab || \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-${slot.status}`,\n              children: slot.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this), slot.status === 'confirmed' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteBookedSlot(slot.id),\n            disabled: loading || apiError,\n            className: \"delete-button\",\n            children: \"Cancel Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 19\n          }, this)]\n        }, slot.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-bookings\",\n        children: loading ? 'Loading...' : 'No bookings found for your account.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .admin-section {\n          margin: 2rem 0;\n          padding: 1rem;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n\n        .pending-booking-item {\n          background: white;\n          padding: 1rem;\n          margin: 1rem 0;\n          border-radius: 4px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n\n        .action-buttons {\n          display: flex;\n          gap: 1rem;\n          margin-top: 1rem;\n        }\n\n        .confirm-button {\n          background: #4CAF50;\n          color: white;\n          border: none;\n          padding: 0.5rem 1rem;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n\n        .reject-button {\n          background: #f44336;\n          color: white;\n          border: none;\n          padding: 0.5rem 1rem;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n\n        .status-waiting {\n          color: #ff9800;\n          font-weight: bold;\n        }\n\n        .status-confirmed {\n          color: #4CAF50;\n          font-weight: bold;\n        }\n\n        .status-rejected {\n          color: #f44336;\n          font-weight: bold;\n        }\n\n        .readonly-input {\n          background-color: #f5f5f5;\n          cursor: not-allowed;\n          border: 1px solid #ddd;\n          padding: 8px;\n          border-radius: 4px;\n          width: 100%;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"gP3FKr+v++HaOnjztnuhi+wddd8=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","API_BASE_URL","fetchPendingBookings","handleBookingAction","fetchDayOrder","supabase","TimeSlots","AdminDayOrder","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","facultyId","name","email","department","date","dayOrder","lab","timeSlot","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","selectedDate","setSelectedDate","selectedSlot","setSelectedSlot","message","setMessage","isAdmin","setIsAdmin","pendingBookings","setPendingBookings","user","setUser","checkServerHealth","isHealthy","initializeUser","data","auth","getUser","userIsAdmin","isAdminUser","prev","_user$user_metadata","user_metadata","full_name","fetchUserBookings","fetchPendingBookingsData","console","today","Date","toISOString","split","dateInput","document","getElementById","setAttribute","adminEmails","includes","isWeekend","day","getDay","formatDateForDisplay","dateString","isWeekendDay","formattedDate","toLocaleDateString","weekday","year","month","handleBookingChange","e","value","target","response","fetch","encodeURIComponent","json","ok","day_order","log","toString","handleFetchAvailableSeats","handleRetryConnection","selectedLab","availableTimeSlots","label","available","handleBookingSubmit","preventDefault","toLowerCase","endsWith","length","handleDeleteBookedSlot","bookingId","window","confirm","handleSlotSelect","slot","handleBooking","_user$user_metadata2","_user$user_metadata3","_user$user_metadata4","method","headers","body","JSON","stringify","registration_number","contentType","get","text","Error","handleBookingStatusChange","action","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","id","map","booking","time_slot","adminEmail","onSubmit","htmlFor","type","onChange","required","placeholder","readOnly","status","jsx","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  fetchAvailableSeats, \n  bookSlot, \n  fetchBookedSlots, \n  deleteBookedSlot, \n  checkApiHealth, \n  API_BASE_URL,\n  fetchPendingBookings,\n  handleBookingAction,\n  fetchDayOrder\n} from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport AdminDayOrder from '../components/AdminDayOrder';\n\nconst SlotBooking = () => {\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlot: ''\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    \n    const initializeUser = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n          const userIsAdmin = isAdminUser(user.email);\n          setIsAdmin(userIsAdmin);\n          \n          setBookingForm(prev => ({\n            ...prev,\n            email: user.email,\n            name: user.user_metadata?.full_name || user.email\n          }));\n\n          if (user.email) {\n            await fetchUserBookings(user.email);\n            if (userIsAdmin) {\n              await fetchPendingBookingsData();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    \n    checkServerHealth();\n    initializeUser();\n    \n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n  \n  // Function to check if a user is admin\n  const isAdminUser = (email) => {\n    const adminEmails = ['km5260@srmist.edu.in', 'manorant@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = (date) => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n  \n  // Function to provide a descriptive date string\n  const formatDateForDisplay = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    \n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async (e) => {\n    const { name, value } = e.target;\n    \n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n    \n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Handle date changes\n    if (name === 'date' && value) {\n      // Update form with the date immediately\n      setBookingForm(prev => ({\n        ...prev,\n        date: value,\n        dayOrder: '' // Clear day order while fetching\n      }));\n\n      if (isWeekend(value)) {\n        setError(\"Weekends (Saturday and Sunday) are not available for booking.\");\n        setBookingForm(prev => ({\n          ...prev,\n          date: '',\n          dayOrder: ''\n        }));\n        return;\n      }\n\n      try {\n        // Get day order for selected date\n        const response = await fetch(`${API_BASE_URL}/day-order?date=${encodeURIComponent(value)}`);\n        const data = await response.json();\n        \n        if (response.ok && data.day_order) {\n          console.log('Fetched day order:', data.day_order); // Debug log\n          setBookingForm(prev => ({\n            ...prev,\n            date: value,\n            dayOrder: data.day_order.toString()\n          }));\n        } else {\n          console.error('Day order response:', data); // Debug log\n          setError(data.error || \"Could not fetch day order for the selected date.\");\n        }\n\n        // If lab is selected, fetch available seats\n        if (bookingForm.lab) {\n          handleFetchAvailableSeats(value, bookingForm.lab);\n        }\n      } catch (error) {\n        console.error('Error fetching day order:', error);\n        setError(error.message);\n      }\n    } else {\n      // Update other form fields normally\n      setBookingForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n    \n    // Handle lab selection\n    if (name === 'lab' && value && bookingForm.date) {\n      handleFetchAvailableSeats(bookingForm.date, value);\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    \n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab) {\n      setTimeSlots([]);\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setApiError(false);\n    \n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab);\n      console.log('Available slots response:', data);\n      \n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [\n        { value: \"08:00-08:50\", label: \"8:00 AM - 8:50 AM\", available: data[\"08:00-08:50\"] === true },\n        { value: \"08:50-09:40\", label: \"8:50 AM - 9:40 AM\", available: data[\"08:50-09:40\"] === true },\n        { value: \"09:45-10:35\", label: \"9:45 AM - 10:35 AM\", available: data[\"09:45-10:35\"] === true },\n        { value: \"10:40-11:30\", label: \"10:40 AM - 11:30 AM\", available: data[\"10:40-11:30\"] === true },\n        { value: \"11:35-12:25\", label: \"11:35 AM - 12:25 PM\", available: data[\"11:35-12:25\"] === true },\n        { value: \"12:30-01:20\", label: \"12:30 PM - 1:20 PM\", available: data[\"12:30-01:20\"] === true },\n        { value: \"01:25-02:15\", label: \"1:25 PM - 2:15 PM\", available: data[\"01:25-02:15\"] === true },\n        { value: \"02:20-03:10\", label: \"2:20 PM - 3:10 PM\", available: data[\"02:20-03:10\"] === true },\n        { value: \"03:10-04:00\", label: \"3:10 PM - 4:00 PM\", available: data[\"03:10-04:00\"] === true },\n        { value: \"04:00-04:50\", label: \"4:00 PM - 4:50 PM\", available: data[\"04:00-04:50\"] === true }\n      ];\n      \n      setTimeSlots(availableTimeSlots);\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Clear previous messages\n    setError('');\n    setSuccess('');\n    \n    // Validate form inputs\n    if (!bookingForm.facultyId || !bookingForm.name || !bookingForm.email || !bookingForm.date || !bookingForm.timeSlot) {\n      setError(\"Please fill out all fields before submitting.\");\n      return;\n    }\n\n    // Validate SRM email\n    if (!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')) {\n      setError(\"Please use an email ending with @srmist.edu.in\");\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const data = await bookSlot(bookingForm);\n      setSuccess(data.message);\n      \n      // Refresh the bookings after successful booking\n      fetchUserBookings(bookingForm.email);\n      \n      // Reset form only on successful booking\n      setBookingForm({\n        facultyId: '',\n        name: '',\n        email: bookingForm.email, // Keep the email\n        department: '',\n        date: '',\n        dayOrder: '',\n        lab: '',\n        timeSlot: ''\n      });\n      \n      // Clear time slots\n      setTimeSlots([]);\n      \n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async (email) => {\n    if (!email || !email.toLowerCase().endsWith('@srmist.edu.in')) {\n      return;\n    }\n\n    setLoading(true);\n    \n    try {\n      const data = await fetchBookedSlots(email);\n      setBookedSlots(data);\n      setShowBookedSlots(true);\n      \n      if (data.length === 0) {\n        setSuccess(\"No booked slots found for your email.\");\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        console.error('Error fetching bookings:', error);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async (bookingId) => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    \n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n      \n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n      \n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n      \n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlot(slot);\n    setError('');\n    setSuccess('');\n  };\n\n  const handleBooking = async () => {\n    if (!selectedDate || !selectedSlot) {\n      setError('Please select both date and time slot.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const { data: { user } } = await supabase.auth.getUser();\n\n      if (!user) {\n        setError('Please sign in to book a slot.');\n        return;\n      }\n\n      const response = await fetch(`${API_BASE_URL}/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          date: selectedDate,\n          timeSlot: selectedSlot,\n          email: user.email,\n          facultyId: user.user_metadata?.registration_number || user.email,\n          name: user.user_metadata?.full_name || user.email,\n          department: user.user_metadata?.department || 'Not specified'\n        }),\n      });\n\n      // Check if the response is JSON\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        console.error('Non-JSON response:', await response.text());\n        throw new Error('Backend server error. Please make sure the server is running.');\n      }\n\n      const data = await response.json();\n      \n      if (!response.ok) {\n        setError(data.message || 'Error booking slot.');\n        return;\n      }\n      \n      setSuccess(data.message);\n      \n      // Reset selections after successful booking\n      setSelectedSlot(null);\n      // Refresh the bookings list\n      fetchUserBookings(user.email);\n    } catch (error) {\n      setError('Error booking slot. Please try again.');\n      console.error('Booking error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      setLoading(true);\n      const data = await fetchPendingBookings('km5260@srmist.edu.in');\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to handle booking confirmation/rejection\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      setLoading(true);\n      const data = await handleBookingAction(bookingId, action, 'km5260@srmist.edu.in');\n      setSuccess(data.message);\n\n      // Refresh both pending bookings and available slots\n      await fetchPendingBookingsData();\n      if (bookingForm.date && bookingForm.lab) {\n        await handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n      // Refresh user bookings if the current user has any\n      if (bookingForm.email) {\n        await fetchUserBookings(bookingForm.email);\n      }\n    } catch (error) {\n      console.error('Error updating booking status:', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      {apiError && (\n        <div className=\"api-error\">\n          <h3>Connection Error</h3>\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\n          <button \n            onClick={handleRetryConnection} \n            disabled={loading}\n            className=\"action-button\"\n          >\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\n          </button>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-message\">\n          {success}\n        </div>\n      )}\n      \n      {message && (\n        <div className={`message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n      \n      {isAdmin && (\n        <section id=\"pending-bookings\" className=\"admin-section\">\n          <h2>Pending Bookings (Admin)</h2>\n          {pendingBookings.length > 0 ? (\n            <div className=\"pending-bookings-list\">\n              {pendingBookings.map(booking => (\n                <div key={booking.id} className=\"pending-booking-item\">\n                  <div className=\"booking-details\">\n                    <p><strong>Name:</strong> {booking.name}</p>\n                    <p><strong>Email:</strong> {booking.email}</p>\n                    <p><strong>Department:</strong> {booking.department}</p>\n                    <p><strong>Date:</strong> {booking.date}</p>\n                    <p><strong>Time:</strong> {booking.time_slot}</p>\n                    <p><strong>Lab:</strong> {booking.lab}</p>\n                    <p><strong>Day Order:</strong> {booking.day_order}</p>\n                  </div>\n                  <div className=\"action-buttons\">\n                    <button\n                      onClick={() => handleBookingStatusChange(booking.id, 'confirm')}\n                      className=\"confirm-button\"\n                    >\n                      Confirm\n                    </button>\n                    <button\n                      onClick={() => handleBookingStatusChange(booking.id, 'reject')}\n                      className=\"reject-button\"\n                    >\n                      Reject\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>No pending bookings</p>\n          )}\n        </section>\n      )}\n\n      {/* Add AdminDayOrder component for admin users */}\n      {user && isAdminUser(user.email) && (\n        <AdminDayOrder adminEmail={user.email} />\n      )}\n\n      <section id=\"lab-booking\">\n        <h2>Book Your Lab Slot</h2>\n        <form onSubmit={handleBookingSubmit}>\n          <label htmlFor=\"facultyId\">Faculty ID:</label>\n          <input \n            type=\"text\" \n            id=\"facultyId\" \n            name=\"facultyId\" \n            value={bookingForm.facultyId}\n            onChange={handleBookingChange}\n            required \n            placeholder=\"Enter your faculty ID\"\n            disabled={loading || apiError}\n          />\n\n          <label htmlFor=\"name\">Full Name:</label>\n          <input \n            type=\"text\" \n            id=\"name\" \n            name=\"name\" \n            value={bookingForm.name}\n            onChange={handleBookingChange}\n            required\n            placeholder=\"Enter your full name\"\n          />\n\n          <label htmlFor=\"email\">Email (SRM):</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            name=\"email\" \n            value={bookingForm.email}\n            readOnly\n            disabled\n            className=\"readonly-input\"\n          />\n\n          <label htmlFor=\"department\">Department:</label>\n          <select \n            id=\"department\" \n            name=\"department\" \n            value={bookingForm.department}\n            onChange={handleBookingChange}\n            required\n            disabled={loading || apiError}\n          >\n            <option value=\"\">Select Department</option>\n            <option value=\"NETWORKING\">Networking</option>\n            <option value=\"CINTEL\">CINTEL</option>\n            <option value=\"DSBS\">DSBS</option>\n            <option value=\"CTECH\">CTECH</option>\n          </select>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"date\">Date:</label>\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              value={bookingForm.date}\n              onChange={handleBookingChange}\n              required\n              disabled={loading || apiError}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"dayOrder\">Day Order:</label>\n            <input\n              type=\"text\"\n              id=\"dayOrder\"\n              name=\"dayOrder\"\n              value={bookingForm.dayOrder ? `Day ${bookingForm.dayOrder}` : ''}\n              readOnly\n              className=\"readonly-input\"\n              placeholder=\"Select a date to see day order\"\n            />\n          </div>\n\n          <label htmlFor=\"lab\">Select Lab:</label>\n          <select \n            id=\"lab\" \n            name=\"lab\" \n            value={bookingForm.lab}\n            onChange={handleBookingChange}\n            required\n            disabled={loading || apiError}\n            className=\"lab-select\"\n          >\n            <option value=\"\">Select a Lab</option>\n            <option value=\"LAB A\">LAB A</option>\n            <option value=\"LAB B\">LAB B</option>\n            <option value=\"LAB C\">LAB C</option>\n            <option value=\"LAB D\">LAB D</option>\n          </select>\n\n          <label htmlFor=\"timeSlot\">Time Slot:</label>\n          <select \n            id=\"timeSlot\" \n            name=\"timeSlot\" \n            value={bookingForm.timeSlot}\n            onChange={handleBookingChange}\n            required\n            disabled={loading || apiError || timeSlots.length === 0}\n            className=\"time-slot-select\"\n          >\n            <option value=\"\">Select a slot</option>\n            {loading && timeSlots.length === 0 ? (\n              <option value=\"\">Loading available slots...</option>\n            ) : timeSlots.length > 0 ? (\n              timeSlots.map(slot => (\n                <option \n                  key={slot.value} \n                  value={slot.value}\n                  disabled={!slot.available}\n                  className={!slot.available ? 'slot-full' : ''}\n                >\n                  {`${slot.label} (${slot.available ? 'Available' : 'Booked'})`}\n                </option>\n              ))\n            ) : (\n              <option value=\"\">Select a date first</option>\n            )}\n          </select>\n\n          <div className=\"button-container\">\n            <button \n              type=\"submit\" \n              id=\"bookSlotButton\" \n              className=\"booking-button\"\n              disabled={loading || apiError}\n            >\n              {loading ? 'Booking...' : 'Book Slot'}\n            </button>\n          </div>\n        </form>\n      </section>\n\n      <section id=\"user-bookings\">\n        <h2>Your Booked Slots</h2>\n        \n        {loading && <div className=\"loading\">Loading your bookings...</div>}\n        \n        {bookedSlots.length > 0 ? (\n          <div className=\"booked-slots-list\">\n            {bookedSlots.map(slot => (\n              <div key={slot.id} className=\"booked-slot-item\">\n                <div className=\"booked-slot-details\">\n                  <strong>Date:</strong> {slot.date}<br />\n                  <strong>Time:</strong> {slot.time_slot}<br />\n                  <strong>Lab:</strong> {slot.lab || \"Not specified\"}<br />\n                  <strong>Status:</strong> <span className={`status-${slot.status}`}>{slot.status}</span>\n                </div>\n                {slot.status === 'confirmed' && (\n                  <button \n                    onClick={() => handleDeleteBookedSlot(slot.id)}\n                    disabled={loading || apiError}\n                    className=\"delete-button\"\n                  >\n                    Cancel Booking\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"no-bookings\">\n            {loading ? 'Loading...' : 'No bookings found for your account.'}\n          </div>\n        )}\n      </section>\n\n      <style jsx>{`\n        .admin-section {\n          margin: 2rem 0;\n          padding: 1rem;\n          background: #f5f5f5;\n          border-radius: 8px;\n        }\n\n        .pending-booking-item {\n          background: white;\n          padding: 1rem;\n          margin: 1rem 0;\n          border-radius: 4px;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n        }\n\n        .action-buttons {\n          display: flex;\n          gap: 1rem;\n          margin-top: 1rem;\n        }\n\n        .confirm-button {\n          background: #4CAF50;\n          color: white;\n          border: none;\n          padding: 0.5rem 1rem;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n\n        .reject-button {\n          background: #f44336;\n          color: white;\n          border: none;\n          padding: 0.5rem 1rem;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n\n        .status-waiting {\n          color: #ff9800;\n          font-weight: bold;\n        }\n\n        .status-confirmed {\n          color: #4CAF50;\n          font-weight: bold;\n        }\n\n        .status-rejected {\n          color: #f44336;\n          font-weight: bold;\n        }\n\n        .readonly-input {\n          background-color: #f5f5f5;\n          cursor: not-allowed;\n          border: 1px solid #ddd;\n          padding: 8px;\n          border-radius: 4px;\n          width: 100%;\n        }\n      `}</style>\n    </main>\n  );\n};\n\nexport default SlotBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}