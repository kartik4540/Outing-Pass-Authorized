{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseClient';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkUser = async () => {\n      try {\n        var _user$email;\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        console.log('Session check:', {\n          session,\n          error\n        });\n        if (error) {\n          console.error('Session error:', error);\n          throw error;\n        }\n        if (!session) {\n          console.log('No session found, redirecting to auth');\n          navigate('/auth');\n          return;\n        }\n\n        // If we have a session, verify it's still valid and check email domain\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (!user) {\n          console.log('No user found, redirecting to auth');\n          navigate('/auth');\n          return;\n        }\n\n        // Validate email domain\n        if (!((_user$email = user.email) !== null && _user$email !== void 0 && _user$email.endsWith('@srmist.edu.in'))) {\n          console.log('Invalid email domain, signing out');\n          await supabase.auth.signOut();\n          navigate('/auth');\n          return;\n        }\n        console.log('Valid session found:', user);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error checking auth status:', error);\n        navigate('/auth');\n      }\n    };\n\n    // Check for existing session\n    checkUser();\n\n    // Set up auth state change listener\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log('Auth state changed:', event, session);\n      if (event === 'SIGNED_OUT') {\n        navigate('/auth');\n      } else if (event === 'SIGNED_IN' && session) {\n        var _user$email2;\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user !== null && user !== void 0 && (_user$email2 = user.email) !== null && _user$email2 !== void 0 && _user$email2.endsWith('@srmist.edu.in')) {\n          setLoading(false);\n        } else {\n          console.log('Invalid email domain, signing out');\n          await supabase.auth.signOut();\n          navigate('/auth');\n        }\n      }\n    });\n\n    // Cleanup subscription\n    return () => {\n      if (subscription) subscription.unsubscribe();\n    };\n  }, [navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"y3JVj3H+DZT4skK8GcW7cVdM7zQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useState","supabase","useNavigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","loading","setLoading","navigate","checkUser","_user$email","data","session","error","auth","getSession","console","log","user","getUser","email","endsWith","signOut","subscription","onAuthStateChange","event","_user$email2","unsubscribe","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/components/ProtectedRoute.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { supabase } from '../supabaseClient'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const checkUser = async () => {\r\n      try {\r\n        const { data: { session }, error } = await supabase.auth.getSession()\r\n        console.log('Session check:', { session, error })\r\n        \r\n        if (error) {\r\n          console.error('Session error:', error)\r\n          throw error\r\n        }\r\n        \r\n        if (!session) {\r\n          console.log('No session found, redirecting to auth')\r\n          navigate('/auth')\r\n          return\r\n        }\r\n\r\n        // If we have a session, verify it's still valid and check email domain\r\n        const { data: { user } } = await supabase.auth.getUser()\r\n        if (!user) {\r\n          console.log('No user found, redirecting to auth')\r\n          navigate('/auth')\r\n          return\r\n        }\r\n\r\n        // Validate email domain\r\n        if (!user.email?.endsWith('@srmist.edu.in')) {\r\n          console.log('Invalid email domain, signing out')\r\n          await supabase.auth.signOut()\r\n          navigate('/auth')\r\n          return\r\n        }\r\n\r\n        console.log('Valid session found:', user)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error('Error checking auth status:', error)\r\n        navigate('/auth')\r\n      }\r\n    }\r\n\r\n    // Check for existing session\r\n    checkUser()\r\n\r\n    // Set up auth state change listener\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {\r\n      console.log('Auth state changed:', event, session)\r\n      if (event === 'SIGNED_OUT') {\r\n        navigate('/auth')\r\n      } else if (event === 'SIGNED_IN' && session) {\r\n        const { data: { user } } = await supabase.auth.getUser()\r\n        if (user?.email?.endsWith('@srmist.edu.in')) {\r\n          setLoading(false)\r\n        } else {\r\n          console.log('Invalid email domain, signing out')\r\n          await supabase.auth.signOut()\r\n          navigate('/auth')\r\n        }\r\n      }\r\n    })\r\n\r\n    // Cleanup subscription\r\n    return () => {\r\n      if (subscription) subscription.unsubscribe()\r\n    }\r\n  }, [navigate])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '100vh' \r\n      }}>\r\n        Loading...\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default ProtectedRoute "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}