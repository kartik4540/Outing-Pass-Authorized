{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91989\\\\Desktop\\\\SRMLAB - Copy\\\\react-version\\\\src\\\\pages\\\\SlotBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchAvailableSeats, bookSlot, fetchBookedSlots, deleteBookedSlot, checkApiHealth, API_BASE_URL, fetchPendingBookings, handleBookingAction, fetchDayOrder } from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlotBooking = () => {\n  _s();\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlots: [] // Changed from timeSlot to timeSlots array\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlots, setSelectedSlots] = useState([]); // Changed from selectedSlot to selectedSlots array\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [bookingCounts, setBookingCounts] = useState({\n    waiting: 0,\n    confirmed: 0,\n    rejected: 0\n  });\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    const initializeUser = async () => {\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n          const userIsAdmin = isAdminUser(user.email);\n          setIsAdmin(userIsAdmin);\n          setBookingForm(prev => {\n            var _user$user_metadata;\n            return {\n              ...prev,\n              email: user.email,\n              name: ((_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.full_name) || user.email\n            };\n          });\n          if (user.email) {\n            await fetchUserBookings(user.email);\n            if (userIsAdmin) {\n              await fetchPendingBookingsData();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    checkServerHealth();\n    initializeUser();\n\n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n\n  // Function to check if a user is admin\n  const isAdminUser = email => {\n    const adminEmails = ['km5260@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = date => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n\n  // Function to provide a descriptive date string\n  const formatDateForDisplay = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Function to check if a date should be disabled (weekends)\n  const isDateDisabled = date => {\n    const currentDate = new Date(date);\n    return currentDate.getDay() === 0 || currentDate.getDay() === 6; // 0 is Sunday, 6 is Saturday\n  };\n\n  // Function to get the next available date (skip weekends)\n  const getNextAvailableDate = date => {\n    const currentDate = new Date(date);\n    while (isDateDisabled(currentDate)) {\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return currentDate.toISOString().split('T')[0];\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n\n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Handle date changes with weekend validation\n    if (name === 'date' && value) {\n      if (isDateDisabled(value)) {\n        const nextAvailableDate = getNextAvailableDate(value);\n        setError('Weekends are not available for booking. Next available date selected.');\n\n        // Update the date input to the next available date\n        e.target.value = nextAvailableDate;\n        setBookingForm(prev => ({\n          ...prev,\n          date: nextAvailableDate,\n          lab: '',\n          timeSlots: []\n        }));\n        setTimeSlots([]);\n        setSelectedSlots([]);\n        return;\n      }\n      setBookingForm(prev => ({\n        ...prev,\n        date: value,\n        lab: '',\n        // Reset lab selection when date changes\n        timeSlots: [] // Reset time slots when date changes\n      }));\n      setTimeSlots([]); // Clear time slots\n      setSelectedSlots([]); // Clear selected slots when date changes\n    } else {\n      // Update form state for other fields\n      setBookingForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n\n      // Handle lab selection or day order changes\n      if ((name === 'lab' || name === 'dayOrder') && bookingForm.date) {\n        const updatedForm = {\n          ...bookingForm,\n          [name]: value\n        };\n\n        // Only fetch available seats if we have both lab and day order\n        if (updatedForm.lab && updatedForm.dayOrder) {\n          handleFetchAvailableSeats(updatedForm.date, updatedForm.lab);\n        } else {\n          setTimeSlots([]); // Clear time slots if we're missing either lab or day order\n          setSelectedSlots([]);\n        }\n      }\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab || !bookingForm.dayOrder) {\n      setTimeSlots([]);\n      setSelectedSlots([]);\n      return;\n    }\n    setLoading(true);\n    // Store current error message and selected slots\n    const currentError = error;\n    const currentSelectedSlots = selectedSlots;\n    setApiError(false);\n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab, bookingForm.dayOrder);\n      console.log('Available slots response:', data);\n\n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [{\n        value: \"08:00-08:50\",\n        label: \"8:00 AM - 8:50 AM\",\n        available: data[\"08:00-08:50\"] === true\n      }, {\n        value: \"08:50-09:40\",\n        label: \"8:50 AM - 9:40 AM\",\n        available: data[\"08:50-09:40\"] === true\n      }, {\n        value: \"09:45-10:35\",\n        label: \"9:45 AM - 10:35 AM\",\n        available: data[\"09:45-10:35\"] === true\n      }, {\n        value: \"10:40-11:30\",\n        label: \"10:40 AM - 11:30 AM\",\n        available: data[\"10:40-11:30\"] === true\n      }, {\n        value: \"11:35-12:25\",\n        label: \"11:35 AM - 12:25 PM\",\n        available: data[\"11:35-12:25\"] === true\n      }, {\n        value: \"12:30-01:20\",\n        label: \"12:30 PM - 1:20 PM\",\n        available: data[\"12:30-01:20\"] === true\n      }, {\n        value: \"01:25-02:15\",\n        label: \"1:25 PM - 2:15 PM\",\n        available: data[\"01:25-02:15\"] === true\n      }, {\n        value: \"02:20-03:10\",\n        label: \"2:20 PM - 3:10 PM\",\n        available: data[\"02:20-03:10\"] === true\n      }, {\n        value: \"03:10-04:00\",\n        label: \"3:10 PM - 4:00 PM\",\n        available: data[\"03:10-04:00\"] === true\n      }, {\n        value: \"04:00-04:50\",\n        label: \"4:00 PM - 4:50 PM\",\n        available: data[\"04:00-04:50\"] === true\n      }];\n\n      // Update time slots\n      setTimeSlots(availableTimeSlots);\n\n      // Remove any selected slots that are no longer available\n      setSelectedSlots(prevSlots => prevSlots.filter(slot => availableTimeSlots.find(ts => ts.value === slot && ts.available)));\n\n      // Restore error message if it exists\n      if (currentError) {\n        setError(currentError);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      // Validate required fields\n      if (!bookingForm.date || !bookingForm.lab || !bookingForm.timeSlots || bookingForm.timeSlots.length === 0) {\n        setError('Please select a date, lab, and at least one time slot.');\n        return;\n      }\n\n      // Create booking data\n      const bookingData = {\n        ...bookingForm,\n        timeSlots: bookingForm.timeSlots // Ensure timeSlots is an array\n      };\n\n      // Make the booking request\n      const response = await bookSlot(bookingData);\n      if (response.success) {\n        setSuccess('Booking request submitted successfully!');\n        // Clear form\n        setBookingForm(prev => ({\n          ...prev,\n          date: '',\n          lab: '',\n          timeSlots: []\n        }));\n        setSelectedSlots([]);\n        setTimeSlots([]);\n\n        // Refresh booked slots\n        if (user !== null && user !== void 0 && user.email) {\n          await fetchUserBookings(user.email);\n        }\n      } else {\n        setError(response.error || 'Failed to create booking. Please try again.');\n      }\n    } catch (error) {\n      console.error('Booking error:', error);\n      setError(error.message || 'Failed to create booking. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async email => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/booked-slots?email=${encodeURIComponent(email)}`);\n      if (!response.ok) throw new Error('Failed to fetch bookings');\n      const data = await response.json();\n\n      // Update booking counts\n      setBookingCounts({\n        waiting: data.counts.waiting || 0,\n        confirmed: data.counts.confirmed || 0,\n        rejected: data.counts.rejected || 0\n      });\n\n      // Combine all bookings if 'all' is selected, otherwise filter by status\n      const allBookings = selectedStatus === 'all' ? [...(data.bookings.waiting || []), ...(data.bookings.confirmed || []), ...(data.bookings.rejected || [])] : data.bookings[selectedStatus] || [];\n      setBookedSlots(allBookings);\n    } catch (error) {\n      console.error('Error fetching booked slots:', error);\n      setError('Failed to fetch your bookings. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async bookingId => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n\n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n\n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSlotSelect = slot => {\n    setSelectedSlots(prevSlots => {\n      const newSlots = prevSlots.includes(slot) ? prevSlots.filter(s => s !== slot) // Remove slot if already selected\n      : [...prevSlots, slot]; // Add slot if not selected\n\n      // Update bookingForm.timeSlots as well\n      setBookingForm(prev => ({\n        ...prev,\n        timeSlots: newSlots\n      }));\n      return newSlots;\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      if (!(user !== null && user !== void 0 && user.email)) return;\n      const response = await fetch(`${API_BASE_URL}/admin/pending-bookings?admin_email=${encodeURIComponent(user.email)}`);\n      if (!response.ok) throw new Error('Failed to fetch pending bookings');\n      const data = await response.json();\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError('Failed to fetch pending bookings');\n    }\n  };\n\n  // Function to handle booking status change (confirm/reject)\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      if (!(user !== null && user !== void 0 && user.email)) return;\n      const response = await fetch(`${API_BASE_URL}/admin/booking/${bookingId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          admin_email: user.email,\n          action: action\n        })\n      });\n      if (!response.ok) throw new Error(`Failed to ${action} booking`);\n\n      // Refresh pending bookings list\n      await fetchPendingBookingsData();\n      setSuccess(`Booking ${action}ed successfully`);\n    } catch (error) {\n      console.error(`Error ${action}ing booking:`, error);\n      setError(`Failed to ${action} booking`);\n    }\n  };\n  const handleStatusFilter = status => {\n    setSelectedStatus(status);\n    if (user !== null && user !== void 0 && user.email) {\n      fetchUserBookings(user.email);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slot-booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lab Slot Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleBookingSubmit,\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"facultyId\",\n        children: \"Faculty ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"facultyId\",\n        name: \"facultyId\",\n        value: bookingForm.facultyId,\n        onChange: handleBookingChange,\n        required: true,\n        placeholder: \"Enter your faculty ID\",\n        disabled: loading || apiError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: bookingForm.name,\n        onChange: handleBookingChange,\n        required: true,\n        placeholder: \"Enter your full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email (SRM):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: bookingForm.email,\n        readOnly: true,\n        disabled: true,\n        className: \"readonly-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"department\",\n        children: \"Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"department\",\n        name: \"department\",\n        value: bookingForm.department,\n        onChange: handleBookingChange,\n        required: true,\n        disabled: loading || apiError,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NETWORKING\",\n          children: \"Networking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CINTEL\",\n          children: \"CINTEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DSBS\",\n          children: \"DSBS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CTECH\",\n          children: \"CTECH\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          value: bookingForm.date,\n          onChange: handleBookingChange,\n          required: true,\n          disabled: loading || apiError,\n          min: new Date().toISOString().split('T')[0],\n          onKeyDown: e => e.preventDefault() // Prevent manual input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dayOrder\",\n          children: \"Day Order:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dayOrder\",\n          name: \"dayOrder\",\n          value: bookingForm.dayOrder || '',\n          onChange: handleBookingChange,\n          required: true,\n          className: \"day-order-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Day Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Day 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Day 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"Day 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Day 4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"Day 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lab\",\n        children: \"Select Lab:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"lab\",\n        name: \"lab\",\n        value: bookingForm.lab,\n        onChange: handleBookingChange,\n        required: true,\n        disabled: loading || apiError,\n        className: \"lab-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Lab\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB A\",\n          children: \"LAB A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB B\",\n          children: \"LAB B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB C\",\n          children: \"LAB C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"LAB D\",\n          children: \"LAB D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-slots-grid\",\n        children: loading && timeSlots.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading available slots...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this) : timeSlots.length > 0 ? timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `time-slot-item ${!slot.available ? 'disabled' : ''} ${selectedSlots.includes(slot.value) ? 'selected' : ''}`,\n          onClick: () => slot.available && handleSlotSelect(slot.value),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot-time\",\n            children: slot.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot-status\",\n            children: slot.available ? 'Available' : 'Booked'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 17\n          }, this)]\n        }, slot.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Select a date and lab first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-slots\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Time Slots:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), selectedSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-slots-list\",\n          children: selectedSlots.map(slot => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-slot-item\",\n            children: [slot, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-slot\",\n              onClick: () => handleSlotSelect(slot),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this)]\n          }, slot, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No slots selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"booking-button\",\n          disabled: loading || apiError || selectedSlots.length === 0,\n          children: loading ? 'Booking...' : `Book ${selectedSlots.length} Slot${selectedSlots.length !== 1 ? 's' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), apiError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetryConnection,\n        disabled: loading,\n        className: \"action-button\",\n        children: loading ? 'Trying to connect...' : 'Retry Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        position: 'sticky',\n        top: '20px',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        padding: '15px',\n        borderRadius: '5px',\n        marginBottom: '20px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        zIndex: 1000,\n        whiteSpace: 'pre-line' // This will preserve line breaks in the error message\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 9\n    }, this), showBookedSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booked-slots-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Bookings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-filter-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `status-button ${selectedStatus === 'all' ? 'active' : ''}`,\n          onClick: () => handleStatusFilter('all'),\n          children: [\"All Bookings (\", bookingCounts.waiting + bookingCounts.confirmed + bookingCounts.rejected, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `status-button ${selectedStatus === 'waiting' ? 'active' : ''}`,\n          onClick: () => handleStatusFilter('waiting'),\n          children: [\"Waiting (\", bookingCounts.waiting, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `status-button ${selectedStatus === 'confirmed' ? 'active' : ''}`,\n          onClick: () => handleStatusFilter('confirmed'),\n          children: [\"Confirmed (\", bookingCounts.confirmed, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `status-button ${selectedStatus === 'rejected' ? 'active' : ''}`,\n          onClick: () => handleStatusFilter('rejected'),\n          children: [\"Rejected (\", bookingCounts.rejected, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this), bookedSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"booked-slots-list\",\n        children: bookedSlots.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `booking-card ${booking.status}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-status-badge\",\n            children: booking.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"booking-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Booking Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 24\n              }, this), \" \", booking.formatted_date || booking.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Lab:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 24\n              }, this), \" \", booking.lab]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time Slot:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 24\n              }, this), \" \", booking.time_slot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 24\n              }, this), \" \", booking.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 19\n          }, this), booking.status === 'waiting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => handleDeleteBookedSlot(booking.id),\n            disabled: loading,\n            children: \"Cancel Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 21\n          }, this)]\n        }, booking.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-bookings\",\n        children: selectedStatus === 'all' ? 'You have no bookings yet' : `You have no ${selectedStatus} bookings`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotBooking, \"68s6O8neTm3QUzBHCL4S7t0eQVI=\");\n_c = SlotBooking;\nexport default SlotBooking;\nvar _c;\n$RefreshReg$(_c, \"SlotBooking\");","map":{"version":3,"names":["React","useState","useEffect","fetchAvailableSeats","bookSlot","fetchBookedSlots","deleteBookedSlot","checkApiHealth","API_BASE_URL","fetchPendingBookings","handleBookingAction","fetchDayOrder","supabase","TimeSlots","jsxDEV","_jsxDEV","SlotBooking","_s","bookingForm","setBookingForm","facultyId","name","email","department","date","dayOrder","lab","timeSlots","setTimeSlots","loading","setLoading","bookedSlots","setBookedSlots","showBookedSlots","setShowBookedSlots","error","setError","success","setSuccess","apiError","setApiError","selectedDate","setSelectedDate","selectedSlots","setSelectedSlots","message","setMessage","isAdmin","setIsAdmin","pendingBookings","setPendingBookings","user","setUser","selectedStatus","setSelectedStatus","bookingCounts","setBookingCounts","waiting","confirmed","rejected","checkServerHealth","isHealthy","initializeUser","data","auth","getUser","userIsAdmin","isAdminUser","prev","_user$user_metadata","user_metadata","full_name","fetchUserBookings","fetchPendingBookingsData","console","today","Date","toISOString","split","dateInput","document","getElementById","setAttribute","adminEmails","includes","isWeekend","day","getDay","formatDateForDisplay","dateString","isWeekendDay","formattedDate","toLocaleDateString","weekday","year","month","isDateDisabled","currentDate","getNextAvailableDate","setDate","getDate","handleBookingChange","e","value","target","nextAvailableDate","updatedForm","handleFetchAvailableSeats","handleRetryConnection","selectedLab","currentError","currentSelectedSlots","log","availableTimeSlots","label","available","prevSlots","filter","slot","find","ts","handleBookingSubmit","preventDefault","length","bookingData","response","fetch","encodeURIComponent","ok","Error","json","counts","allBookings","bookings","handleDeleteBookedSlot","bookingId","window","confirm","handleSlotSelect","newSlots","s","handleBookingStatusChange","action","method","headers","body","JSON","stringify","admin_email","handleStatusFilter","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","placeholder","disabled","readOnly","min","onKeyDown","map","onClick","style","position","top","backgroundColor","color","padding","borderRadius","marginBottom","boxShadow","zIndex","whiteSpace","booking","formatted_date","time_slot","_c","$RefreshReg$"],"sources":["C:/Users/91989/Desktop/SRMLAB - Copy/react-version/src/pages/SlotBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  fetchAvailableSeats, \n  bookSlot, \n  fetchBookedSlots, \n  deleteBookedSlot, \n  checkApiHealth, \n  API_BASE_URL,\n  fetchPendingBookings,\n  handleBookingAction,\n  fetchDayOrder\n} from '../services/api';\nimport './SlotBooking.css';\nimport { supabase } from '../supabaseClient';\nimport TimeSlots from '../components/TimeSlots';\n\nconst SlotBooking = () => {\n  // Form state\n  const [bookingForm, setBookingForm] = useState({\n    facultyId: '',\n    name: '',\n    email: '',\n    department: '',\n    date: '',\n    dayOrder: '',\n    lab: '',\n    timeSlots: [] // Changed from timeSlot to timeSlots array\n  });\n\n  // UI state\n  const [timeSlots, setTimeSlots] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [bookedSlots, setBookedSlots] = useState([]);\n  const [showBookedSlots, setShowBookedSlots] = useState(true); // Set to true by default\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedSlots, setSelectedSlots] = useState([]); // Changed from selectedSlot to selectedSlots array\n  const [message, setMessage] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pendingBookings, setPendingBookings] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [bookingCounts, setBookingCounts] = useState({ waiting: 0, confirmed: 0, rejected: 0 });\n\n  // Check API health and initialize user on component mount\n  useEffect(() => {\n    const checkServerHealth = async () => {\n      const isHealthy = await checkApiHealth();\n      setApiError(!isHealthy);\n    };\n    \n    const initializeUser = async () => {\n      try {\n        const { data: { user } } = await supabase.auth.getUser();\n        if (user) {\n          setUser(user);\n          const userIsAdmin = isAdminUser(user.email);\n          setIsAdmin(userIsAdmin);\n          \n          setBookingForm(prev => ({\n            ...prev,\n            email: user.email,\n            name: user.user_metadata?.full_name || user.email\n          }));\n\n          if (user.email) {\n            await fetchUserBookings(user.email);\n            if (userIsAdmin) {\n              await fetchPendingBookingsData();\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing user:', error);\n      }\n    };\n    \n    checkServerHealth();\n    initializeUser();\n    \n    // Set the minimum date to today\n    const today = new Date().toISOString().split(\"T\")[0];\n    const dateInput = document.getElementById(\"date\");\n    if (dateInput) {\n      dateInput.setAttribute(\"min\", today);\n    }\n  }, []);\n  \n  // Function to check if a user is admin\n  const isAdminUser = (email) => {\n    const adminEmails = ['km5260@srmist.edu.in'];\n    return adminEmails.includes(email);\n  };\n\n  // Utility function to check if a date is a weekend\n  const isWeekend = (date) => {\n    const day = new Date(date).getDay();\n    // 0 is Sunday, 6 is Saturday\n    return day === 0 || day === 6;\n  };\n  \n  // Function to provide a descriptive date string\n  const formatDateForDisplay = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.getDay();\n    const isWeekendDay = day === 0 || day === 6;\n    const formattedDate = date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    \n    return `${formattedDate}${isWeekendDay ? ' (Weekend - Not Available)' : ''}`;\n  };\n\n  // Function to check if a date should be disabled (weekends)\n  const isDateDisabled = (date) => {\n    const currentDate = new Date(date);\n    return currentDate.getDay() === 0 || currentDate.getDay() === 6; // 0 is Sunday, 6 is Saturday\n  };\n\n  // Function to get the next available date (skip weekends)\n  const getNextAvailableDate = (date) => {\n    const currentDate = new Date(date);\n    while (isDateDisabled(currentDate)) {\n      currentDate.setDate(currentDate.getDate() + 1);\n    }\n    return currentDate.toISOString().split('T')[0];\n  };\n\n  // Handle booking form input changes\n  const handleBookingChange = async (e) => {\n    const { name, value } = e.target;\n    \n    // Prevent only email from being changed\n    if (name === 'email') {\n      return;\n    }\n    \n    // Clear previous messages\n    setError('');\n    setSuccess('');\n\n    // Handle date changes with weekend validation\n    if (name === 'date' && value) {\n      if (isDateDisabled(value)) {\n        const nextAvailableDate = getNextAvailableDate(value);\n        setError('Weekends are not available for booking. Next available date selected.');\n        \n        // Update the date input to the next available date\n        e.target.value = nextAvailableDate;\n        \n        setBookingForm(prev => ({\n          ...prev,\n          date: nextAvailableDate,\n          lab: '',\n          timeSlots: []\n        }));\n        setTimeSlots([]);\n        setSelectedSlots([]);\n        return;\n      }\n\n      setBookingForm(prev => ({\n        ...prev,\n        date: value,\n        lab: '',  // Reset lab selection when date changes\n        timeSlots: []  // Reset time slots when date changes\n      }));\n      setTimeSlots([]); // Clear time slots\n      setSelectedSlots([]); // Clear selected slots when date changes\n    } else {\n      // Update form state for other fields\n      setBookingForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n\n      // Handle lab selection or day order changes\n      if ((name === 'lab' || name === 'dayOrder') && bookingForm.date) {\n        const updatedForm = {\n          ...bookingForm,\n          [name]: value\n        };\n        \n        // Only fetch available seats if we have both lab and day order\n        if (updatedForm.lab && updatedForm.dayOrder) {\n          handleFetchAvailableSeats(updatedForm.date, updatedForm.lab);\n        } else {\n          setTimeSlots([]); // Clear time slots if we're missing either lab or day order\n          setSelectedSlots([]);\n        }\n      }\n    }\n  };\n\n  // Retry server connection\n  const handleRetryConnection = async () => {\n    setLoading(true);\n    const isHealthy = await checkApiHealth();\n    setApiError(!isHealthy);\n    setLoading(false);\n    \n    if (isHealthy && bookingForm.date && bookingForm.lab) {\n      handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n    }\n  };\n\n  // Fetch available seats for selected date and lab\n  const handleFetchAvailableSeats = async (selectedDate, selectedLab) => {\n    if (!selectedDate || !selectedLab || !bookingForm.dayOrder) {\n      setTimeSlots([]);\n      setSelectedSlots([]);\n      return;\n    }\n\n    setLoading(true);\n    // Store current error message and selected slots\n    const currentError = error;\n    const currentSelectedSlots = selectedSlots;\n    setApiError(false);\n    \n    try {\n      const data = await fetchAvailableSeats(selectedDate, selectedLab, bookingForm.dayOrder);\n      console.log('Available slots response:', data);\n      \n      // Transform data for the time slot dropdown with boolean availability\n      const availableTimeSlots = [\n        { value: \"08:00-08:50\", label: \"8:00 AM - 8:50 AM\", available: data[\"08:00-08:50\"] === true },\n        { value: \"08:50-09:40\", label: \"8:50 AM - 9:40 AM\", available: data[\"08:50-09:40\"] === true },\n        { value: \"09:45-10:35\", label: \"9:45 AM - 10:35 AM\", available: data[\"09:45-10:35\"] === true },\n        { value: \"10:40-11:30\", label: \"10:40 AM - 11:30 AM\", available: data[\"10:40-11:30\"] === true },\n        { value: \"11:35-12:25\", label: \"11:35 AM - 12:25 PM\", available: data[\"11:35-12:25\"] === true },\n        { value: \"12:30-01:20\", label: \"12:30 PM - 1:20 PM\", available: data[\"12:30-01:20\"] === true },\n        { value: \"01:25-02:15\", label: \"1:25 PM - 2:15 PM\", available: data[\"01:25-02:15\"] === true },\n        { value: \"02:20-03:10\", label: \"2:20 PM - 3:10 PM\", available: data[\"02:20-03:10\"] === true },\n        { value: \"03:10-04:00\", label: \"3:10 PM - 4:00 PM\", available: data[\"03:10-04:00\"] === true },\n        { value: \"04:00-04:50\", label: \"4:00 PM - 4:50 PM\", available: data[\"04:00-04:50\"] === true }\n      ];\n      \n      // Update time slots\n      setTimeSlots(availableTimeSlots);\n      \n      // Remove any selected slots that are no longer available\n      setSelectedSlots(prevSlots => \n        prevSlots.filter(slot => \n          availableTimeSlots.find(ts => ts.value === slot && ts.available)\n        )\n      );\n\n      // Restore error message if it exists\n      if (currentError) {\n        setError(currentError);\n      }\n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle booking form submission\n  const handleBookingSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      // Validate required fields\n      if (!bookingForm.date || !bookingForm.lab || !bookingForm.timeSlots || bookingForm.timeSlots.length === 0) {\n        setError('Please select a date, lab, and at least one time slot.');\n        return;\n      }\n\n      // Create booking data\n      const bookingData = {\n        ...bookingForm,\n        timeSlots: bookingForm.timeSlots // Ensure timeSlots is an array\n      };\n\n      // Make the booking request\n      const response = await bookSlot(bookingData);\n\n      if (response.success) {\n        setSuccess('Booking request submitted successfully!');\n        // Clear form\n        setBookingForm(prev => ({\n          ...prev,\n          date: '',\n          lab: '',\n          timeSlots: []\n        }));\n        setSelectedSlots([]);\n        setTimeSlots([]);\n        \n        // Refresh booked slots\n        if (user?.email) {\n          await fetchUserBookings(user.email);\n        }\n      } else {\n        setError(response.error || 'Failed to create booking. Please try again.');\n      }\n    } catch (error) {\n      console.error('Booking error:', error);\n      setError(error.message || 'Failed to create booking. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch booked slots for a user\n  const fetchUserBookings = async (email) => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${API_BASE_URL}/booked-slots?email=${encodeURIComponent(email)}`);\n      if (!response.ok) throw new Error('Failed to fetch bookings');\n      \n      const data = await response.json();\n      \n      // Update booking counts\n      setBookingCounts({\n        waiting: data.counts.waiting || 0,\n        confirmed: data.counts.confirmed || 0,\n        rejected: data.counts.rejected || 0\n      });\n\n      // Combine all bookings if 'all' is selected, otherwise filter by status\n      const allBookings = selectedStatus === 'all' \n        ? [...(data.bookings.waiting || []), ...(data.bookings.confirmed || []), ...(data.bookings.rejected || [])]\n        : (data.bookings[selectedStatus] || []);\n      \n      setBookedSlots(allBookings);\n    } catch (error) {\n      console.error('Error fetching booked slots:', error);\n      setError('Failed to fetch your bookings. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Delete a booked slot\n  const handleDeleteBookedSlot = async (bookingId) => {\n    if (!window.confirm(\"Are you sure you want to delete this slot?\")) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    \n    try {\n      const data = await deleteBookedSlot(bookingId);\n      setSuccess(data.message);\n      \n      // Refresh the booked slots using the email from the form\n      if (bookingForm.email) {\n        fetchUserBookings(bookingForm.email);\n      }\n      \n      // Fetch available seats again to update the slots\n      if (bookingForm.date && bookingForm.lab) {\n        handleFetchAvailableSeats(bookingForm.date, bookingForm.lab);\n      }\n      \n    } catch (error) {\n      if (error.message.includes('Backend server is not running')) {\n        setApiError(true);\n      } else {\n        setError(error.message);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlotSelect = (slot) => {\n    setSelectedSlots(prevSlots => {\n      const newSlots = prevSlots.includes(slot)\n        ? prevSlots.filter(s => s !== slot)  // Remove slot if already selected\n        : [...prevSlots, slot];              // Add slot if not selected\n      \n      // Update bookingForm.timeSlots as well\n      setBookingForm(prev => ({\n        ...prev,\n        timeSlots: newSlots\n      }));\n      \n      return newSlots;\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  // Function to fetch pending bookings (admin only)\n  const fetchPendingBookingsData = async () => {\n    try {\n      if (!user?.email) return;\n      \n      const response = await fetch(`${API_BASE_URL}/admin/pending-bookings?admin_email=${encodeURIComponent(user.email)}`);\n      if (!response.ok) throw new Error('Failed to fetch pending bookings');\n      \n      const data = await response.json();\n      setPendingBookings(data);\n    } catch (error) {\n      console.error('Error fetching pending bookings:', error);\n      setError('Failed to fetch pending bookings');\n    }\n  };\n\n  // Function to handle booking status change (confirm/reject)\n  const handleBookingStatusChange = async (bookingId, action) => {\n    try {\n      if (!user?.email) return;\n\n      const response = await fetch(`${API_BASE_URL}/admin/booking/${bookingId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          admin_email: user.email,\n          action: action\n        })\n      });\n\n      if (!response.ok) throw new Error(`Failed to ${action} booking`);\n\n      // Refresh pending bookings list\n      await fetchPendingBookingsData();\n      setSuccess(`Booking ${action}ed successfully`);\n    } catch (error) {\n      console.error(`Error ${action}ing booking:`, error);\n      setError(`Failed to ${action} booking`);\n    }\n  };\n\n  const handleStatusFilter = (status) => {\n    setSelectedStatus(status);\n    if (user?.email) {\n      fetchUserBookings(user.email);\n    }\n  };\n\n  return (\n    <div className=\"slot-booking-container\">\n      <h2>Lab Slot Booking</h2>\n      \n      <form onSubmit={handleBookingSubmit} className=\"booking-form\">\n        <label htmlFor=\"facultyId\">Faculty ID:</label>\n        <input \n          type=\"text\" \n          id=\"facultyId\" \n          name=\"facultyId\" \n          value={bookingForm.facultyId}\n          onChange={handleBookingChange}\n          required \n          placeholder=\"Enter your faculty ID\"\n          disabled={loading || apiError}\n        />\n\n        <label htmlFor=\"name\">Full Name:</label>\n        <input \n          type=\"text\" \n          id=\"name\" \n          name=\"name\" \n          value={bookingForm.name}\n          onChange={handleBookingChange}\n          required\n          placeholder=\"Enter your full name\"\n        />\n\n        <label htmlFor=\"email\">Email (SRM):</label>\n        <input \n          type=\"email\" \n          id=\"email\" \n          name=\"email\" \n          value={bookingForm.email}\n          readOnly\n          disabled\n          className=\"readonly-input\"\n        />\n\n        <label htmlFor=\"department\">Department:</label>\n        <select \n          id=\"department\" \n          name=\"department\" \n          value={bookingForm.department}\n          onChange={handleBookingChange}\n          required\n          disabled={loading || apiError}\n        >\n          <option value=\"\">Select Department</option>\n          <option value=\"NETWORKING\">Networking</option>\n          <option value=\"CINTEL\">CINTEL</option>\n          <option value=\"DSBS\">DSBS</option>\n          <option value=\"CTECH\">CTECH</option>\n        </select>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"date\">Date:</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            value={bookingForm.date}\n            onChange={handleBookingChange}\n            required\n            disabled={loading || apiError}\n            min={new Date().toISOString().split('T')[0]}\n            onKeyDown={(e) => e.preventDefault()} // Prevent manual input\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"dayOrder\">Day Order:</label>\n          <select\n            id=\"dayOrder\"\n            name=\"dayOrder\"\n            value={bookingForm.dayOrder || ''}\n            onChange={handleBookingChange}\n            required\n            className=\"day-order-select\"\n          >\n            <option value=\"\">Select Day Order</option>\n            <option value=\"1\">Day 1</option>\n            <option value=\"2\">Day 2</option>\n            <option value=\"3\">Day 3</option>\n            <option value=\"4\">Day 4</option>\n            <option value=\"5\">Day 5</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"lab\">Select Lab:</label>\n        <select \n          id=\"lab\" \n          name=\"lab\" \n          value={bookingForm.lab}\n          onChange={handleBookingChange}\n          required\n          disabled={loading || apiError}\n          className=\"lab-select\"\n        >\n          <option value=\"\">Select a Lab</option>\n          <option value=\"LAB A\">LAB A</option>\n          <option value=\"LAB B\">LAB B</option>\n          <option value=\"LAB C\">LAB C</option>\n          <option value=\"LAB D\">LAB D</option>\n        </select>\n\n        <div className=\"time-slots-grid\">\n          {loading && timeSlots.length === 0 ? (\n            <div>Loading available slots...</div>\n          ) : timeSlots.length > 0 ? (\n            timeSlots.map(slot => (\n              <div\n                key={slot.value}\n                className={`time-slot-item ${!slot.available ? 'disabled' : ''} ${selectedSlots.includes(slot.value) ? 'selected' : ''}`}\n                onClick={() => slot.available && handleSlotSelect(slot.value)}\n              >\n                <div className=\"time-slot-time\">{slot.label}</div>\n                <div className=\"time-slot-status\">\n                  {slot.available ? 'Available' : 'Booked'}\n                </div>\n              </div>\n            ))\n          ) : (\n            <div>Select a date and lab first</div>\n          )}\n        </div>\n\n        <div className=\"selected-slots\">\n          <h3>Selected Time Slots:</h3>\n          {selectedSlots.length > 0 ? (\n            <div className=\"selected-slots-list\">\n              {selectedSlots.map(slot => (\n                <div key={slot} className=\"selected-slot-item\">\n                  {slot}\n                  <button \n                    className=\"remove-slot\"\n                    onClick={() => handleSlotSelect(slot)}\n                  >\n                    ×\n                  </button>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>No slots selected</p>\n          )}\n        </div>\n\n        <div className=\"button-container\">\n          <button \n            type=\"submit\"\n            className=\"booking-button\"\n            disabled={loading || apiError || selectedSlots.length === 0}\n          >\n            {loading ? 'Booking...' : `Book ${selectedSlots.length} Slot${selectedSlots.length !== 1 ? 's' : ''}`}\n          </button>\n        </div>\n      </form>\n\n      {apiError && (\n        <div className=\"api-error\">\n          <h3>Connection Error</h3>\n          <p>Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.</p>\n          <button \n            onClick={handleRetryConnection} \n            disabled={loading}\n            className=\"action-button\"\n          >\n            {loading ? 'Trying to connect...' : 'Retry Connection'}\n          </button>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\" style={{\n          position: 'sticky',\n          top: '20px',\n          backgroundColor: '#ffebee',\n          color: '#c62828',\n          padding: '15px',\n          borderRadius: '5px',\n          marginBottom: '20px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          zIndex: 1000,\n          whiteSpace: 'pre-line'  // This will preserve line breaks in the error message\n        }}>\n          {error}\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"success-message\">\n          {success}\n        </div>\n      )}\n      \n      {message && (\n        <div className={`message ${message.includes('Error') || message.includes('Please') ? 'error' : 'success'}`}>\n          {message}\n        </div>\n      )}\n\n      {showBookedSlots && (\n        <div className=\"booked-slots-section\">\n          <h2>Your Bookings</h2>\n          \n          <div className=\"status-filter-buttons\">\n            <button\n              className={`status-button ${selectedStatus === 'all' ? 'active' : ''}`}\n              onClick={() => handleStatusFilter('all')}\n            >\n              All Bookings ({bookingCounts.waiting + bookingCounts.confirmed + bookingCounts.rejected})\n            </button>\n            <button\n              className={`status-button ${selectedStatus === 'waiting' ? 'active' : ''}`}\n              onClick={() => handleStatusFilter('waiting')}\n            >\n              Waiting ({bookingCounts.waiting})\n            </button>\n            <button\n              className={`status-button ${selectedStatus === 'confirmed' ? 'active' : ''}`}\n              onClick={() => handleStatusFilter('confirmed')}\n            >\n              Confirmed ({bookingCounts.confirmed})\n            </button>\n            <button\n              className={`status-button ${selectedStatus === 'rejected' ? 'active' : ''}`}\n              onClick={() => handleStatusFilter('rejected')}\n            >\n              Rejected ({bookingCounts.rejected})\n            </button>\n          </div>\n\n          {bookedSlots.length > 0 ? (\n            <div className=\"booked-slots-list\">\n              {bookedSlots.map((booking) => (\n                <div key={booking.id} className={`booking-card ${booking.status}`}>\n                  <div className=\"booking-status-badge\">{booking.status}</div>\n                  <div className=\"booking-info\">\n                    <h3>Booking Details</h3>\n                    <p><strong>Date:</strong> {booking.formatted_date || booking.date}</p>\n                    <p><strong>Lab:</strong> {booking.lab}</p>\n                    <p><strong>Time Slot:</strong> {booking.time_slot}</p>\n                    <p><strong>Status:</strong> {booking.status}</p>\n                  </div>\n                  {booking.status === 'waiting' && (\n                    <button\n                      className=\"cancel-button\"\n                      onClick={() => handleDeleteBookedSlot(booking.id)}\n                      disabled={loading}\n                    >\n                      Cancel Booking\n                    </button>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"no-bookings\">\n              {selectedStatus === 'all' \n                ? 'You have no bookings yet'\n                : `You have no ${selectedStatus} bookings`}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SlotBooking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}