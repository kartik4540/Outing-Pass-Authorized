{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchAvailableSeats,bookSlot,fetchBookedSlots,deleteBookedSlot,checkApiHealth}from'../services/api';import'./SlotBooking.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SlotBooking=()=>{// Form state\nconst[bookingForm,setBookingForm]=useState({name:'',email:'',department:'CSE',date:'',timeSlot:''});// Delete booking form state\nconst[deleteEmail,setDeleteEmail]=useState('');// UI state\nconst[timeSlots,setTimeSlots]=useState([]);const[loading,setLoading]=useState(false);const[bookedSlots,setBookedSlots]=useState([]);const[showBookedSlots,setShowBookedSlots]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const[apiError,setApiError]=useState(false);// Check API health on component mount\nuseEffect(()=>{const checkServerHealth=async()=>{const isHealthy=await checkApiHealth();setApiError(!isHealthy);};checkServerHealth();// Set the minimum date to today\nconst today=new Date().toISOString().split(\"T\")[0];document.getElementById(\"date\").setAttribute(\"min\",today);},[]);// Handle booking form input changes\nconst handleBookingChange=e=>{const{name,value}=e.target;// Remove the digit-only validation for registration number\nsetBookingForm(prev=>({...prev,[name]:value}));// Clear previous errors and success messages\nsetError('');setSuccess('');// Fetch available seats when date changes\nif(name==='date'&&value){handleFetchAvailableSeats(value);}};// Retry server connection\nconst handleRetryConnection=async()=>{setLoading(true);const isHealthy=await checkApiHealth();setApiError(!isHealthy);setLoading(false);if(isHealthy&&bookingForm.date){handleFetchAvailableSeats(bookingForm.date);}};// Fetch available seats for selected date\nconst handleFetchAvailableSeats=async selectedDate=>{if(!selectedDate){alert(\"Please select a date to check available slots.\");return;}setLoading(true);setError('');setApiError(false);try{const data=await fetchAvailableSeats(selectedDate);// Transform data for the time slot dropdown\nconst availableTimeSlots=[{value:\"9-11\",label:\"9:00 AM - 11:00 AM\",available:data[\"9-11\"]||0},{value:\"11-1\",label:\"11:00 AM - 1:00 PM\",available:data[\"11-1\"]||0},{value:\"2-4\",label:\"2:00 PM - 4:00 PM\",available:data[\"2-4\"]||0},{value:\"4-6\",label:\"4:00 PM - 6:00 PM\",available:data[\"4-6\"]||0}];setTimeSlots(availableTimeSlots);}catch(error){if(error.message.includes('Backend server is not running')){setApiError(true);}else{setError(error.message);}}finally{setLoading(false);}};// Handle booking form submission\nconst handleBookingSubmit=async e=>{e.preventDefault();// Clear previous messages\nsetError('');setSuccess('');// Validate form inputs\nif(!bookingForm.name||!bookingForm.email||!bookingForm.date||!bookingForm.timeSlot){setError(\"Please fill out all fields before submitting.\");return;}// Validate registration number length\nif(bookingForm.name.length!==15){setError(\"Registration number should be exactly 15 characters long.\");return;}// Validate SRM email\nif(!bookingForm.email.toLowerCase().endsWith('@srmist.edu.in')){setError(\"Please use an email ending with @srmist.edu.in\");return;}setLoading(true);try{const data=await bookSlot(bookingForm);setSuccess(data.message);// Reset form\nsetBookingForm({name:'',email:'',department:'CSE',date:'',timeSlot:''});// Clear time slots\nsetTimeSlots([]);}catch(error){if(error.message.includes('Backend server is not running')){setApiError(true);}else{setError(error.message);}}finally{setLoading(false);}};// Handle delete email change\nconst handleDeleteEmailChange=e=>{setDeleteEmail(e.target.value);setError('');setSuccess('');};// Fetch booked slots for a user\nconst handleFetchBookedSlots=async()=>{// Clear previous messages\nsetError('');setSuccess('');if(!deleteEmail){setError(\"Please enter your email to fetch booked slots.\");return;}// Validate SRM email\nif(!deleteEmail.toLowerCase().endsWith('@srmist.edu.in')){setError(\"Please use an email ending with @srmist.edu.in\");return;}setLoading(true);try{const data=await fetchBookedSlots(deleteEmail);setBookedSlots(data);setShowBookedSlots(true);if(data.length===0){setSuccess(\"No booked slots found for this email.\");}}catch(error){if(error.message.includes('Backend server is not running')){setApiError(true);}else{setError(error.message);}setShowBookedSlots(false);}finally{setLoading(false);}};// Delete a booked slot\nconst handleDeleteBookedSlot=async bookingId=>{if(!window.confirm(\"Are you sure you want to delete this slot?\")){return;}setLoading(true);setError('');setSuccess('');try{const data=await deleteBookedSlot(bookingId);setSuccess(data.message);// Refresh the booked slots\nhandleFetchBookedSlots();}catch(error){if(error.message.includes('Backend server is not running')){setApiError(true);}else{setError(error.message);}}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"main\",{children:[apiError&&/*#__PURE__*/_jsxs(\"div\",{className:\"api-error\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Connection Error\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Cannot connect to the backend server. Please make sure the Flask server is running on port 8080.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRetryConnection,disabled:loading,className:\"action-button\",children:loading?'Trying to connect...':'Retry Connection'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsxs(\"section\",{id:\"lab-booking\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Book Your Lab Slot\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"labBookingForm\",onSubmit:handleBookingSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Registration Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:bookingForm.name,onChange:handleBookingChange,required:true,maxLength:\"15\",minLength:\"15\",placeholder:\"Enter your 15-character registration number\",disabled:loading||apiError,title:\"Registration number must be exactly 15 characters\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email (SRM):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:bookingForm.email,onChange:handleBookingChange,required:true,placeholder:\"youremail@srmist.edu.in\",disabled:loading||apiError,pattern:\".*@srmist\\\\.edu\\\\.in\",title:\"Please use an email ending with @srmist.edu.in\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"department\",children:\"Department:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"department\",name:\"department\",value:bookingForm.department,onChange:handleBookingChange,required:true,disabled:loading||apiError,children:[/*#__PURE__*/_jsx(\"option\",{value:\"CSE\",children:\"Computer Science and Engineering\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ME\",children:\"Mechanical Engineering\"}),/*#__PURE__*/_jsx(\"option\",{value:\"EEE\",children:\"Electrical and Electronics Engineering\"}),/*#__PURE__*/_jsx(\"option\",{value:\"CE\",children:\"Civil Engineering\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BT\",children:\"Biotechnology\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date\",children:\"Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date\",name:\"date\",value:bookingForm.date,onChange:handleBookingChange,required:true,disabled:loading||apiError}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"timeSlot\",children:\"Time Slot:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"timeSlot\",name:\"timeSlot\",value:bookingForm.timeSlot,onChange:handleBookingChange,required:true,disabled:loading||apiError||timeSlots.length===0,children:loading&&timeSlots.length===0?/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Loading available slots...\"}):timeSlots.length>0?timeSlots.map(slot=>/*#__PURE__*/_jsx(\"option\",{value:slot.value,disabled:slot.available===0,children:`${slot.label} (${slot.available} seats available)`},slot.value)):/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a date first\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"bookSlotButton\",className:\"booking-button\",disabled:loading||apiError,children:loading?'Booking...':'Book Slot'})})]})]}),/*#__PURE__*/_jsxs(\"section\",{id:\"delete-booking\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Delete Your Booked Slot\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"deleteBookingForm\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"deleteEmail\",children:\"Email (SRM):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"deleteEmail\",name:\"deleteEmail\",value:deleteEmail,onChange:handleDeleteEmailChange,required:true,placeholder:\"youremail@srmist.edu.in\",disabled:loading||apiError,pattern:\".*@srmist\\\\.edu\\\\.in\",title:\"Please use an email ending with @srmist.edu.in\"}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",id:\"fetchSlotsButton\",onClick:handleFetchBookedSlots,disabled:loading||apiError||!deleteEmail,className:\"action-button\",children:loading?'Fetching...':'Fetch Booked Slots'})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"bookedSlotsContainer\",className:showBookedSlots?'':'hidden',children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Your Booked Slots\"}),/*#__PURE__*/_jsx(\"ul\",{id:\"bookedSlotsList\",children:bookedSlots.length===0?/*#__PURE__*/_jsx(\"li\",{children:\"No slots booked.\"}):bookedSlots.map(slot=>/*#__PURE__*/_jsxs(\"li\",{children:[\"Date: \",slot.date,\", Time Slot: \",slot.time_slot,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteBookedSlot(slot.id),disabled:loading||apiError,className:\"delete-button\",children:\"Delete\"})]},slot.id))})]})]})]});};export default SlotBooking;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}